Text
"[INST] Here is a database schema: table schema: table_204_780:  id [ number]  ""year"" [ number]  ""competition"" [ text]  ""venue"" [ text]  ""position"" [ text]  ""notes"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: tell me the number of times he placed 4th .It is not neccessary to use all the tables.[/INST] SELECT COUNT(*) FROM table_204_780 WHERE ""position"" = 4"
"[INST] Here is a database schema: table schema: table_name_80:  rowers [ VARCHAR]  country [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: Who is the rower from Canada?It is not neccessary to use all the tables.[/INST] SELECT rowers FROM table_name_80 WHERE country = ""canada"""
"[INST] Here is a database schema: table schema: table_name_94:  attendance [ INTEGER]  result [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the highest attendance at a game with a result of 5-1?It is not neccessary to use all the tables.[/INST] SELECT MAX(attendance) FROM table_name_94 WHERE result = ""5-1"""
"[INST] Here is a database schema: table schema: table_name_83:  years [ VARCHAR]  nationality [ VARCHAR]  position [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is Years, when Nationality is United States, and when Position is PG / SG?It is not neccessary to use all the tables.[/INST] SELECT years FROM table_name_83 WHERE nationality = ""united states"" AND position = ""pg / sg"""
"[INST] Here is a database schema: table schema: advisor:  s_ID [ varchar(5)]  i_ID [ varchar(5)] 
table schema: prereq:  course_id [ varchar(8)]  prereq_id [ varchar(8)] 
table schema: teaches:  ID [ varchar(5)]  course_id [ varchar(8)]  sec_id [ varchar(8)]  semester [ varchar(6)]  year [ numeric(40)] 
table schema: instructor:  ID [ varchar(5)]  name [ varchar(20)]  dept_name [ varchar(20)]  salary [ numeric(82)] 
table schema: department:  dept_name [ varchar(20)]  building [ varchar(15)]  budget [ numeric(122)] 
table schema: classroom:  building [ varchar(15)]  room_number [ varchar(7)]  capacity [ numeric(40)] 
table schema: student:  ID [ varchar(5)]  name [ varchar(20)]  dept_name [ varchar(20)]  tot_cred [ numeric(30)] 
table schema: time_slot:  time_slot_id [ varchar(4)]  day [ varchar(1)]  start_hr [ numeric(2)]  start_min [ numeric(2)]  end_hr [ numeric(2)]  end_min [ numeric(2)] 
table schema: course:  course_id [ varchar(8)]  title [ varchar(50)]  dept_name [ varchar(20)]  credits [ numeric(20)] 
table schema: section:  course_id [ varchar(8)]  sec_id [ varchar(8)]  semester [ varchar(6)]  year [ numeric(40)]  building [ varchar(15)]  room_number [ varchar(7)]  time_slot_id [ varchar(4)] 
table schema: takes:  ID [ varchar(5)]  course_id [ varchar(8)]  sec_id [ varchar(8)]  semester [ varchar(6)]  year [ numeric(40)]  grade [ varchar(2)] 
  Please write me a syntactically correct SQL statement that answers the following question: List the number of courses in year 2008 for each instructor in a bar chart.It is not neccessary to use all the tables.[/INST] SELECT name, COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.ID = T3.ID WHERE year = 2008 GROUP BY name"
"[INST] Here is a database schema: table schema: table_26996293_2:  position [ VARCHAR]  cfl_team [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: where cfl team is edmonton (2) what are all the positionIt is not neccessary to use all the tables.[/INST] SELECT position FROM table_26996293_2 WHERE cfl_team = ""Edmonton (2)"""
"[INST] Here is a database schema: table schema: table_9746:  ""Week"" [ real]  ""Date"" [ text]  ""Opponent"" [ text]  ""Result"" [ text]  ""Attendance"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What was the result of the los angeles rams game?It is not neccessary to use all the tables.[/INST] SELECT ""Result"" FROM table_9746 WHERE ""Opponent"" = 'los angeles rams'"
"[INST] Here is a database schema: table schema: ground_service:  city_code [ text]  airport_code [ text]  transport_type [ text]  ground_fare [ int] 
table schema: flight_stop:  flight_id [ int]  stop_number [ int]  stop_days [ text]  stop_airport [ text]  arrival_time [ int]  arrival_airline [ text]  arrival_flight_number [ int]  departure_time [ int]  departure_airline [ text]  departure_flight_number [ int]  stop_time [ int] 
table schema: code_description:  code [ varchar]  description [ text] 
table schema: flight_leg:  flight_id [ int]  leg_number [ int]  leg_flight [ int] 
table schema: equipment_sequence:  aircraft_code_sequence [ varchar]  aircraft_code [ varchar] 
table schema: fare:  fare_id [ int]  from_airport [ varchar]  to_airport [ varchar]  fare_basis_code [ text]  fare_airline [ text]  restriction_code [ text]  one_direction_cost [ int]  round_trip_cost [ int]  round_trip_required [ varchar] 
table schema: time_zone:  time_zone_code [ text]  time_zone_name [ text]  hours_from_gmt [ int] 
table schema: restriction:  restriction_code [ text]  advance_purchase [ int]  stopovers [ text]  saturday_stay_required [ text]  minimum_stay [ int]  maximum_stay [ int]  application [ text]  no_discounts [ text] 
table schema: time_interval:  period [ text]  begin_time [ int]  end_time [ int] 
table schema: flight:  aircraft_code_sequence [ text]  airline_code [ varchar]  airline_flight [ text]  arrival_time [ int]  connections [ int]  departure_time [ int]  dual_carrier [ text]  flight_days [ text]  flight_id [ int]  flight_number [ int]  from_airport [ varchar]  meal_code [ text]  stops [ int]  time_elapsed [ int]  to_airport [ varchar] 
table schema: food_service:  meal_code [ text]  meal_number [ int]  compartment [ text]  meal_description [ varchar] 
table schema: aircraft:  aircraft_code [ varchar]  aircraft_description [ varchar]  manufacturer [ varchar]  basic_type [ varchar]  engines [ int]  propulsion [ varchar]  wide_body [ varchar]  wing_span [ int]  length [ int]  weight [ int]  capacity [ int]  pay_load [ int]  cruising_speed [ int]  range_miles [ int]  pressurized [ varchar] 
table schema: class_of_service:  booking_class [ varchar]  rank [ int]  class_description [ text] 
table schema: compartment_class:  compartment [ varchar]  class_type [ varchar] 
table schema: airline:  airline_code [ varchar]  airline_name [ text]  note [ text] 
table schema: state:  state_code [ text]  state_name [ text]  country_name [ text] 
table schema: date_day:  month_number [ int]  day_number [ int]  year [ int]  day_name [ varchar] 
table schema: fare_basis:  fare_basis_code [ text]  booking_class [ text]  class_type [ text]  premium [ text]  economy [ text]  discounted [ text]  night [ text]  season [ text]  basis_days [ text] 
table schema: airport:  airport_code [ varchar]  airport_name [ text]  airport_location [ text]  state_code [ varchar]  country_name [ varchar]  time_zone_code [ varchar]  minimum_connect_time [ int] 
table schema: dual_carrier:  main_airline [ varchar]  low_flight_number [ int]  high_flight_number [ int]  dual_airline [ varchar]  service_name [ text] 
table schema: days:  days_code [ varchar]  day_name [ varchar] 
table schema: flight_fare:  flight_id [ int]  fare_id [ int] 
table schema: city:  city_code [ varchar]  city_name [ varchar]  state_code [ varchar]  country_name [ varchar]  time_zone_code [ varchar] 
table schema: month:  month_number [ int]  month_name [ text] 
table schema: airport_service:  city_code [ varchar]  airport_code [ varchar]  miles_distant [ int]  direction [ varchar]  minutes_distant [ int] 
  Please write me a syntactically correct SQL statement that answers the following question: does any airline have a JET flight between PITTSBURGH and BALTIMOREIt is not neccessary to use all the tables.[/INST] SELECT DISTINCT flight.flight_id FROM aircraft, airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, equipment_sequence, flight WHERE (aircraft.propulsion = 'JET' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BALTIMORE' AND equipment_sequence.aircraft_code = aircraft.aircraft_code AND flight.aircraft_code_sequence = equipment_sequence.aircraft_code_sequence AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PITTSBURGH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code"
"[INST] Here is a database schema: table schema: table_24604:  ""Week"" [ real]  ""Date"" [ text]  ""Opponent"" [ text]  ""Location"" [ text]  ""Attendance"" [ real]  ""Record"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What was the total number of weeks where the game played Ivor Wynne Stadium?It is not neccessary to use all the tables.[/INST] SELECT COUNT(""Week"") FROM table_24604 WHERE ""Location"" = 'Ivor Wynne Stadium'"
"[INST] Here is a database schema: table schema: ground_service:  city_code [ text]  airport_code [ text]  transport_type [ text]  ground_fare [ int] 
table schema: flight_stop:  flight_id [ int]  stop_number [ int]  stop_days [ text]  stop_airport [ text]  arrival_time [ int]  arrival_airline [ text]  arrival_flight_number [ int]  departure_time [ int]  departure_airline [ text]  departure_flight_number [ int]  stop_time [ int] 
table schema: code_description:  code [ varchar]  description [ text] 
table schema: flight_leg:  flight_id [ int]  leg_number [ int]  leg_flight [ int] 
table schema: equipment_sequence:  aircraft_code_sequence [ varchar]  aircraft_code [ varchar] 
table schema: fare:  fare_id [ int]  from_airport [ varchar]  to_airport [ varchar]  fare_basis_code [ text]  fare_airline [ text]  restriction_code [ text]  one_direction_cost [ int]  round_trip_cost [ int]  round_trip_required [ varchar] 
table schema: time_zone:  time_zone_code [ text]  time_zone_name [ text]  hours_from_gmt [ int] 
table schema: restriction:  restriction_code [ text]  advance_purchase [ int]  stopovers [ text]  saturday_stay_required [ text]  minimum_stay [ int]  maximum_stay [ int]  application [ text]  no_discounts [ text] 
table schema: time_interval:  period [ text]  begin_time [ int]  end_time [ int] 
table schema: flight:  aircraft_code_sequence [ text]  airline_code [ varchar]  airline_flight [ text]  arrival_time [ int]  connections [ int]  departure_time [ int]  dual_carrier [ text]  flight_days [ text]  flight_id [ int]  flight_number [ int]  from_airport [ varchar]  meal_code [ text]  stops [ int]  time_elapsed [ int]  to_airport [ varchar] 
table schema: food_service:  meal_code [ text]  meal_number [ int]  compartment [ text]  meal_description [ varchar] 
table schema: aircraft:  aircraft_code [ varchar]  aircraft_description [ varchar]  manufacturer [ varchar]  basic_type [ varchar]  engines [ int]  propulsion [ varchar]  wide_body [ varchar]  wing_span [ int]  length [ int]  weight [ int]  capacity [ int]  pay_load [ int]  cruising_speed [ int]  range_miles [ int]  pressurized [ varchar] 
table schema: class_of_service:  booking_class [ varchar]  rank [ int]  class_description [ text] 
table schema: compartment_class:  compartment [ varchar]  class_type [ varchar] 
table schema: airline:  airline_code [ varchar]  airline_name [ text]  note [ text] 
table schema: state:  state_code [ text]  state_name [ text]  country_name [ text] 
table schema: date_day:  month_number [ int]  day_number [ int]  year [ int]  day_name [ varchar] 
table schema: fare_basis:  fare_basis_code [ text]  booking_class [ text]  class_type [ text]  premium [ text]  economy [ text]  discounted [ text]  night [ text]  season [ text]  basis_days [ text] 
table schema: airport:  airport_code [ varchar]  airport_name [ text]  airport_location [ text]  state_code [ varchar]  country_name [ varchar]  time_zone_code [ varchar]  minimum_connect_time [ int] 
table schema: dual_carrier:  main_airline [ varchar]  low_flight_number [ int]  high_flight_number [ int]  dual_airline [ varchar]  service_name [ text] 
table schema: days:  days_code [ varchar]  day_name [ varchar] 
table schema: flight_fare:  flight_id [ int]  fare_id [ int] 
table schema: city:  city_code [ varchar]  city_name [ varchar]  state_code [ varchar]  country_name [ varchar]  time_zone_code [ varchar] 
table schema: month:  month_number [ int]  month_name [ text] 
table schema: airport_service:  city_code [ varchar]  airport_code [ varchar]  miles_distant [ int]  direction [ varchar]  minutes_distant [ int] 
  Please write me a syntactically correct SQL statement that answers the following question: is TW flight 497 766 from ST. PETERSBURG to MILWAUKEE with 1 stop available tomorrow morningIt is not neccessary to use all the tables.[/INST] SELECT DISTINCT FLIGHT_0.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight AS FLIGHT_0, flight AS FLIGHT_1, flight AS FLIGHT_2, flight_leg AS FLIGHT_LEG_0, flight_leg AS FLIGHT_LEG_1 WHERE ((((((date_day.day_number = 20 AND date_day.month_number = 1 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND FLIGHT_0.flight_days = days.days_code AND FLIGHT_0.flight_id = FLIGHT_LEG_1.flight_id AND FLIGHT_2.flight_id = FLIGHT_LEG_1.leg_flight AND FLIGHT_2.flight_number = 766) AND FLIGHT_0.flight_id = FLIGHT_LEG_0.flight_id AND FLIGHT_1.flight_id = FLIGHT_LEG_0.leg_flight AND FLIGHT_1.flight_number = 497) AND FLIGHT_0.stops = 1) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'MILWAUKEE' AND FLIGHT_0.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ST. PETERSBURG' AND FLIGHT_0.from_airport = AIRPORT_SERVICE_0.airport_code) AND FLIGHT_0.airline_code = 'TW') AND FLIGHT_0.departure_time BETWEEN 0 AND 1200"
"[INST] Here is a database schema: table schema: table_45318:  ""Year"" [ real]  ""Placement"" [ text]  ""Score"" [ real]  ""Class"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What was the total number for the PIW Class' The Adventures Of... and had a score bigger than 94.6?It is not neccessary to use all the tables.[/INST] SELECT COUNT(""Year"") FROM table_45318 WHERE ""Class"" = 'piw' AND ""Program Title"" = 'the adventures of...' AND ""Score"" > '94.6'"
"[INST] Here is a database schema: table schema: table_name_46:  kerry_number [ INTEGER]  bush_number [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: How many votes did Kerry get in the county that gave Bush 189,605 votes?It is not neccessary to use all the tables.[/INST] SELECT AVG(kerry_number) FROM table_name_46 WHERE bush_number = 189 OFFSET 605"
"[INST] Here is a database schema: table schema: offering_instructor:  offering_instructor_id [ int]  offering_id [ int]  instructor_id [ int] 
table schema: requirement:  requirement_id [ int]  requirement [ varchar]  college [ varchar] 
table schema: course_offering:  offering_id [ int]  course_id [ int]  semester [ int]  section_number [ int]  start_time [ time]  end_time [ time]  monday [ varchar]  tuesday [ varchar]  wednesday [ varchar]  thursday [ varchar]  friday [ varchar]  saturday [ varchar]  sunday [ varchar]  has_final_project [ varchar]  has_final_exam [ varchar]  textbook [ varchar]  class_address [ varchar]  allow_audit [ varchar] 
table schema: student_record:  student_id [ int]  course_id [ int]  semester [ int]  grade [ varchar]  how [ varchar]  transfer_source [ varchar]  earn_credit [ varchar]  repeat_term [ varchar]  test_id [ varchar] 
table schema: course_prerequisite:  pre_course_id [ int]  course_id [ int] 
table schema: ta:  campus_job_id [ int]  student_id [ int]  location [ varchar] 
table schema: semester:  semester_id [ int]  semester [ varchar]  year [ int] 
table schema: area:  course_id [ int]  area [ varchar] 
table schema: instructor:  instructor_id [ int]  name [ varchar]  uniqname [ varchar] 
table schema: gsi:  course_offering_id [ int]  student_id [ int] 
table schema: student:  student_id [ int]  lastname [ varchar]  firstname [ varchar]  program_id [ int]  declare_major [ varchar]  total_credit [ int]  total_gpa [ float]  entered_as [ varchar]  admit_term [ int]  predicted_graduation_semester [ int]  degree [ varchar]  minor [ varchar]  internship [ varchar] 
table schema: comment_instructor:  instructor_id [ int]  student_id [ int]  score [ int]  comment_text [ varchar] 
table schema: course_tags_count:  course_id [ int]  clear_grading [ int]  pop_quiz [ int]  group_projects [ int]  inspirational [ int]  long_lectures [ int]  extra_credit [ int]  few_tests [ int]  good_feedback [ int]  tough_tests [ int]  heavy_papers [ int]  cares_for_students [ int]  heavy_assignments [ int]  respected [ int]  participation [ int]  heavy_reading [ int]  tough_grader [ int]  hilarious [ int]  would_take_again [ int]  good_lecture [ int]  no_skip [ int] 
table schema: jobs:  job_id [ int]  job_title [ varchar]  description [ varchar]  requirement [ varchar]  city [ varchar]  state [ varchar]  country [ varchar]  zip [ int] 
table schema: course:  course_id [ int]  name [ varchar]  department [ varchar]  number [ varchar]  credits [ varchar]  advisory_requirement [ varchar]  enforced_requirement [ varchar]  description [ varchar]  num_semesters [ int]  num_enrolled [ int]  has_discussion [ varchar]  has_lab [ varchar]  has_projects [ varchar]  has_exams [ varchar]  num_reviews [ int]  clarity_score [ int]  easiness_score [ int]  helpfulness_score [ int] 
table schema: program:  program_id [ int]  name [ varchar]  college [ varchar]  introduction [ varchar] 
table schema: program_requirement:  program_id [ int]  category [ varchar]  min_credit [ int]  additional_req [ varchar] 
table schema: program_course:  program_id [ int]  course_id [ int]  workload [ int]  category [ varchar] 
  Please write me a syntactically correct SQL statement that answers the following question: In next semester when is 480 offered ?It is not neccessary to use all the tables.[/INST] SELECT DISTINCT course_offering.end_time, course_offering.friday, course_offering.monday, course_offering.saturday, course_offering.start_time, course_offering.sunday, course_offering.thursday, course_offering.tuesday, course_offering.wednesday FROM course, course_offering, semester WHERE course.course_id = course_offering.course_id AND course.department = 'EECS' AND course.number = 480 AND semester.semester = 'FA' AND semester.semester_id = course_offering.semester AND semester.year = 2016"
"[INST] Here is a database schema: table schema: table_name_35:  season [ VARCHAR]  rank [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: Which season has rank 2?It is not neccessary to use all the tables.[/INST] SELECT season FROM table_name_35 WHERE rank = ""2"""
"[INST] Here is a database schema: table schema: table_55211:  ""Deaths"" [ real] 
  Please write me a syntactically correct SQL statement that answers the following question: What is natural change with a crude death rate of 8.7 and less than 472 live births?It is not neccessary to use all the tables.[/INST] SELECT ""Natural change"" FROM table_55211 WHERE ""Crude death rate (per 1000)"" = '8.7' AND ""Live births"" < '472'"
"[INST] Here is a database schema: table schema: table_25949:  ""Game"" [ real]  ""Date"" [ text]  ""Opponent"" [ text]  ""Score"" [ text]  ""Location"" [ text]  ""Attendance"" [ real]  ""Record"" [ text]  ""Points"" [ real] 
  Please write me a syntactically correct SQL statement that answers the following question: How many points were there scored on October 27?It is not neccessary to use all the tables.[/INST] SELECT MAX(""Points"") FROM table_25949 WHERE ""Date"" = 'October 27'"
"[INST] Here is a database schema: table schema: countries:  COUNTRY_ID [ varchar(2)]  COUNTRY_NAME [ varchar(40)]  REGION_ID [ decimal(100)] 
table schema: departments:  DEPARTMENT_ID [ decimal(40)]  DEPARTMENT_NAME [ varchar(30)]  MANAGER_ID [ decimal(60)]  LOCATION_ID [ decimal(40)] 
table schema: job_history:  EMPLOYEE_ID [ decimal(60)]  START_DATE [ date]  END_DATE [ date]  JOB_ID [ varchar(10)]  DEPARTMENT_ID [ decimal(40)] 
table schema: regions:  REGION_ID [ decimal(50)]  REGION_NAME [ varchar(25)] 
table schema: employees:  EMPLOYEE_ID [ decimal(60)]  FIRST_NAME [ varchar(20)]  LAST_NAME [ varchar(25)]  EMAIL [ varchar(25)]  PHONE_NUMBER [ varchar(20)]  HIRE_DATE [ date]  JOB_ID [ varchar(10)]  SALARY [ decimal(82)]  COMMISSION_PCT [ decimal(22)]  MANAGER_ID [ decimal(60)]  DEPARTMENT_ID [ decimal(40)] 
table schema: locations:  LOCATION_ID [ decimal(40)]  STREET_ADDRESS [ varchar(40)]  POSTAL_CODE [ varchar(12)]  CITY [ varchar(30)]  STATE_PROVINCE [ varchar(25)]  COUNTRY_ID [ varchar(2)] 
table schema: jobs:  JOB_ID [ varchar(10)]  JOB_TITLE [ varchar(35)]  MIN_SALARY [ decimal(60)]  MAX_SALARY [ decimal(60)] 
  Please write me a syntactically correct SQL statement that answers the following question: For those employees who was hired before 2002-06-21, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart.It is not neccessary to use all the tables.[/INST] SELECT HIRE_DATE, SUM(EMPLOYEE_ID) FROM employees WHERE HIRE_DATE < '2002-06-21'"
"[INST] Here is a database schema: table schema: Comments:  Id [ number]  PostId [ number]  Score [ number]  Text [ text]  CreationDate [ time]  UserDisplayName [ text]  UserId [ number]  ContentLicense [ text] 
table schema: ReviewTaskResultTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: PostHistoryTypes:  Id [ number]  Name [ text] 
table schema: CloseAsOffTopicReasonTypes:  Id [ number]  IsUniversal [ boolean]  InputTitle [ text]  MarkdownInputGuidance [ text]  MarkdownPostOwnerGuidance [ text]  MarkdownPrivilegedUserGuidance [ text]  MarkdownConcensusDescription [ text]  CreationDate [ time]  CreationModeratorId [ number]  ApprovalDate [ time]  ApprovalModeratorId [ number]  DeactivationDate [ time]  DeactivationModeratorId [ number] 
table schema: PostHistory:  Id [ number]  PostHistoryTypeId [ number]  PostId [ number]  RevisionGUID [ other]  CreationDate [ time]  UserId [ number]  UserDisplayName [ text]  Comment [ text]  Text [ text]  ContentLicense [ text] 
table schema: PendingFlags:  Id [ number]  FlagTypeId [ number]  PostId [ number]  CreationDate [ time]  CloseReasonTypeId [ number]  CloseAsOffTopicReasonTypeId [ number]  DuplicateOfQuestionId [ number]  BelongsOnBaseHostAddress [ text] 
table schema: PostNotices:  Id [ number]  PostId [ number]  PostNoticeTypeId [ number]  CreationDate [ time]  DeletionDate [ time]  ExpiryDate [ time]  Body [ text]  OwnerUserId [ number]  DeletionUserId [ number] 
table schema: ReviewTaskResults:  Id [ number]  ReviewTaskId [ number]  ReviewTaskResultTypeId [ number]  CreationDate [ time]  RejectionReasonId [ number]  Comment [ text] 
table schema: ReviewRejectionReasons:  Id [ number]  Name [ text]  Description [ text]  PostTypeId [ number] 
table schema: Users:  Id [ number]  Reputation [ number]  CreationDate [ time]  DisplayName [ text]  LastAccessDate [ time]  WebsiteUrl [ text]  Location [ text]  AboutMe [ text]  Views [ number]  UpVotes [ number]  DownVotes [ number]  ProfileImageUrl [ text]  EmailHash [ text]  AccountId [ number] 
table schema: Badges:  Id [ number]  UserId [ number]  Name [ text]  Date [ time]  Class [ number]  TagBased [ boolean] 
table schema: PostTypes:  Id [ number]  Name [ text] 
table schema: ReviewTasks:  Id [ number]  ReviewTaskTypeId [ number]  CreationDate [ time]  DeletionDate [ time]  ReviewTaskStateId [ number]  PostId [ number]  SuggestedEditId [ number]  CompletedByReviewTaskId [ number] 
table schema: SuggestedEdits:  Id [ number]  PostId [ number]  CreationDate [ time]  ApprovalDate [ time]  RejectionDate [ time]  OwnerUserId [ number]  Comment [ text]  Text [ text]  Title [ text]  Tags [ text]  RevisionGUID [ other] 
table schema: CloseReasonTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: VoteTypes:  Id [ number]  Name [ text] 
table schema: TagSynonyms:  Id [ number]  SourceTagName [ text]  TargetTagName [ text]  CreationDate [ time]  OwnerUserId [ number]  AutoRenameCount [ number]  LastAutoRename [ time]  Score [ number]  ApprovedByUserId [ number]  ApprovalDate [ time] 
table schema: Posts:  Id [ number]  PostTypeId [ number]  AcceptedAnswerId [ number]  ParentId [ number]  CreationDate [ time]  DeletionDate [ time]  Score [ number]  ViewCount [ number]  Body [ text]  OwnerUserId [ number]  OwnerDisplayName [ text]  LastEditorUserId [ number]  LastEditorDisplayName [ text]  LastEditDate [ time]  LastActivityDate [ time]  Title [ text]  Tags [ text]  AnswerCount [ number]  CommentCount [ number]  FavoriteCount [ number]  ClosedDate [ time]  CommunityOwnedDate [ time]  ContentLicense [ text] 
table schema: Votes:  Id [ number]  PostId [ number]  VoteTypeId [ number]  UserId [ number]  CreationDate [ time]  BountyAmount [ number] 
table schema: FlagTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: PostLinks:  Id [ number]  CreationDate [ time]  PostId [ number]  RelatedPostId [ number]  LinkTypeId [ number] 
table schema: PostFeedback:  Id [ number]  PostId [ number]  IsAnonymous [ boolean]  VoteTypeId [ number]  CreationDate [ time] 
table schema: Tags:  Id [ number]  TagName [ text]  Count [ number]  ExcerptPostId [ number]  WikiPostId [ number] 
table schema: PostNoticeTypes:  Id [ number]  ClassId [ number]  Name [ text]  Body [ text]  IsHidden [ boolean]  Predefined [ boolean]  PostNoticeDurationId [ number] 
table schema: PostTags:  PostId [ number]  TagId [ number] 
table schema: PostsWithDeleted:  Id [ number]  PostTypeId [ number]  AcceptedAnswerId [ number]  ParentId [ number]  CreationDate [ time]  DeletionDate [ time]  Score [ number]  ViewCount [ number]  Body [ text]  OwnerUserId [ number]  OwnerDisplayName [ text]  LastEditorUserId [ number]  LastEditorDisplayName [ text]  LastEditDate [ time]  LastActivityDate [ time]  Title [ text]  Tags [ text]  AnswerCount [ number]  CommentCount [ number]  FavoriteCount [ number]  ClosedDate [ time]  CommunityOwnedDate [ time]  ContentLicense [ text] 
table schema: ReviewTaskTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: ReviewTaskStates:  Id [ number]  Name [ text]  Description [ text] 
table schema: SuggestedEditVotes:  Id [ number]  SuggestedEditId [ number]  UserId [ number]  VoteTypeId [ number]  CreationDate [ time]  TargetUserId [ number]  TargetRepChange [ number] 
  Please write me a syntactically correct SQL statement that answers the following question: Show the users in a specified reputation range, with ratio of answers accepted.. Show the users in a specified reputation range, with ratio of answers accepted.It is not neccessary to use all the tables.[/INST] SELECT u.DisplayName, u.Reputation, u.Id, COUNT(a.Id) AS AcceptCount, (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = u.Id AND PostTypeId = 2) AS AnswerCount, (CAST(COUNT(a.Id) AS FLOAT) / (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = u.Id AND PostTypeId = 2) * 100) AS AcceptedPercentage FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id INNER JOIN Users AS u ON u.Id = a.OwnerUserId WHERE (u.Reputation >= @RepMin AND u.Reputation <= @RepMax) AND a.PostTypeId = 2 GROUP BY u.Id, u.DisplayName, u.Reputation ORDER BY AcceptedPercentage DESC"
"[INST] Here is a database schema: table schema: table_name_60:  born_died [ VARCHAR]  term_end [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is Born-Died, when Term End is 19 January 1943?It is not neccessary to use all the tables.[/INST] SELECT born_died FROM table_name_60 WHERE term_end = ""19 january 1943"""
"[INST] Here is a database schema: table schema: table_203_16:  id [ number]  ""name"" [ text]  ""party"" [ text]  ""notes"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what is the total number of representatives from the democratic party ?It is not neccessary to use all the tables.[/INST] SELECT COUNT(*) FROM table_203_16 WHERE ""party"" = 'democratic'"
"[INST] Here is a database schema: table schema: table_name_11:  money___ [ INTEGER]  to_par [ INTEGER] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the highest Money ( $ ), when To Par is less than 2?It is not neccessary to use all the tables.[/INST] SELECT MAX(money___) AS $__ FROM table_name_11 WHERE to_par < 2"
"[INST] Here is a database schema: table schema: Apartment_Buildings:  building_id [ INTEGER]  building_short_name [ CHAR(15)]  building_full_name [ VARCHAR(80)]  building_description [ VARCHAR(255)]  building_address [ VARCHAR(255)]  building_manager [ VARCHAR(50)]  building_phone [ VARCHAR(80)] 
table schema: Apartments:  apt_id [ INTEGER]  building_id [ INTEGER]  apt_type_code [ CHAR(15)]  apt_number [ CHAR(10)]  bathroom_count [ INTEGER]  bedroom_count [ INTEGER]  room_count [ CHAR(5)] 
table schema: Apartment_Bookings:  apt_booking_id [ INTEGER]  apt_id [ INTEGER]  guest_id [ INTEGER]  booking_status_code [ CHAR(15)]  booking_start_date [ DATETIME]  booking_end_date [ DATETIME] 
table schema: Apartment_Facilities:  apt_id [ INTEGER]  facility_code [ CHAR(15)] 
table schema: View_Unit_Status:  apt_id [ INTEGER]  apt_booking_id [ INTEGER]  status_date [ DATETIME]  available_yn [ BIT] 
table schema: Guests:  guest_id [ INTEGER]  gender_code [ CHAR(1)]  guest_first_name [ VARCHAR(80)]  guest_last_name [ VARCHAR(80)]  date_of_birth [ DATETIME] 
  Please write me a syntactically correct SQL statement that answers the following question: Return a bar chart about the number bookings for each apartment number, and rank from high to low by the x-axis.It is not neccessary to use all the tables.[/INST] SELECT apt_number, COUNT(apt_number) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id GROUP BY apt_number ORDER BY apt_number DESC"
"[INST] Here is a database schema: table schema: table_51164:  ""Game"" [ real]  ""Date"" [ text]  ""Team"" [ text]  ""Score"" [ text]  ""Record"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: Who had the highest rebounds of the game with a game number higher than 65 on March 28?It is not neccessary to use all the tables.[/INST] SELECT ""High rebounds"" FROM table_51164 WHERE ""Game"" > '65' AND ""Date"" = 'march 28'"
"[INST] Here is a database schema: table schema: regions:  REGION_ID [ decimal(50)]  REGION_NAME [ varchar(25)] 
table schema: locations:  LOCATION_ID [ decimal(40)]  STREET_ADDRESS [ varchar(40)]  POSTAL_CODE [ varchar(12)]  CITY [ varchar(30)]  STATE_PROVINCE [ varchar(25)]  COUNTRY_ID [ varchar(2)] 
table schema: departments:  DEPARTMENT_ID [ decimal(40)]  DEPARTMENT_NAME [ varchar(30)]  MANAGER_ID [ decimal(60)]  LOCATION_ID [ decimal(40)] 
table schema: countries:  COUNTRY_ID [ varchar(2)]  COUNTRY_NAME [ varchar(40)]  REGION_ID [ decimal(100)] 
table schema: employees:  EMPLOYEE_ID [ decimal(60)]  FIRST_NAME [ varchar(20)]  LAST_NAME [ varchar(25)]  EMAIL [ varchar(25)]  PHONE_NUMBER [ varchar(20)]  HIRE_DATE [ date]  JOB_ID [ varchar(10)]  SALARY [ decimal(82)]  COMMISSION_PCT [ decimal(22)]  MANAGER_ID [ decimal(60)]  DEPARTMENT_ID [ decimal(40)] 
table schema: jobs:  JOB_ID [ varchar(10)]  JOB_TITLE [ varchar(35)]  MIN_SALARY [ decimal(60)]  MAX_SALARY [ decimal(60)] 
table schema: job_history:  EMPLOYEE_ID [ decimal(60)]  START_DATE [ date]  END_DATE [ date]  JOB_ID [ varchar(10)]  DEPARTMENT_ID [ decimal(40)] 
  Please write me a syntactically correct SQL statement that answers the following question: For all employees who have the letters D or S in their first name, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, show y axis in desc order.It is not neccessary to use all the tables.[/INST] SELECT HIRE_DATE, SUM(EMPLOYEE_ID) FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' ORDER BY SUM(EMPLOYEE_ID) DESC"
"[INST] Here is a database schema: table schema: grapes:  ID [ INTEGER]  Grape [ TEXT]  Color [ TEXT] 
table schema: wine:  No [ INTEGER]  Grape [ TEXT]  Winery [ TEXT]  Appelation [ TEXT]  State [ TEXT]  Name [ TEXT]  Year [ INTEGER]  Price [ INTEGER]  Score [ INTEGER]  Cases [ INTEGER]  Drink [ TEXT] 
table schema: appellations:  No [ INTEGER]  Appelation [ TEXT]  County [ TEXT]  State [ TEXT]  Area [ TEXT]  isAVA [ TEXT] 
  Please write me a syntactically correct SQL statement that answers the following question: What are the numbers of wines for different grapes Plot them as bar chart, show by the the total number in ascending.It is not neccessary to use all the tables.[/INST] SELECT Grape, COUNT(*) FROM wine GROUP BY Grape ORDER BY COUNT(*)"
"[INST] Here is a database schema: table schema: Manufacturers:  Code [ INTEGER]  Name [ VARCHAR(255)]  Headquarter [ VARCHAR(255)]  Founder [ VARCHAR(255)]  Revenue [ REAL] 
table schema: Products:  Code [ INTEGER]  Name [ VARCHAR(255)]  Price [ DECIMAL]  Manufacturer [ INTEGER] 
  Please write me a syntactically correct SQL statement that answers the following question: For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of revenue , and group by attribute founder in a bar chart.It is not neccessary to use all the tables.[/INST] SELECT Founder, SUM(Revenue) FROM Products AS T1 JOIN Manufacturers AS T2 ON T1.Manufacturer = T2.Code GROUP BY Founder"
"[INST] Here is a database schema: table schema: cost:  costid [ number]  uniquepid [ text]  patienthealthsystemstayid [ number]  eventtype [ text]  eventid [ number]  chargetime [ time]  cost [ number] 
table schema: vitalperiodic:  vitalperiodicid [ number]  patientunitstayid [ number]  temperature [ number]  sao2 [ number]  heartrate [ number]  respiration [ number]  systemicsystolic [ number]  systemicdiastolic [ number]  systemicmean [ number]  observationtime [ time] 
table schema: allergy:  allergyid [ number]  patientunitstayid [ number]  drugname [ text]  allergyname [ text]  allergytime [ time] 
table schema: lab:  labid [ number]  patientunitstayid [ number]  labname [ text]  labresult [ number]  labresulttime [ time] 
table schema: microlab:  microlabid [ number]  patientunitstayid [ number]  culturesite [ text]  organism [ text]  culturetakentime [ time] 
table schema: patient:  uniquepid [ text]  patienthealthsystemstayid [ number]  patientunitstayid [ number]  gender [ text]  age [ text]  ethnicity [ text]  hospitalid [ number]  wardid [ number]  admissionheight [ number]  admissionweight [ number]  dischargeweight [ number]  hospitaladmittime [ time]  hospitaladmitsource [ text]  unitadmittime [ time]  unitdischargetime [ time]  hospitaldischargetime [ time]  hospitaldischargestatus [ text] 
table schema: treatment:  treatmentid [ number]  patientunitstayid [ number]  treatmentname [ text]  treatmenttime [ time] 
table schema: intakeoutput:  intakeoutputid [ number]  patientunitstayid [ number]  cellpath [ text]  celllabel [ text]  cellvaluenumeric [ number]  intakeoutputtime [ time] 
table schema: medication:  medicationid [ number]  patientunitstayid [ number]  drugname [ text]  dosage [ text]  routeadmin [ text]  drugstarttime [ time]  drugstoptime [ time] 
table schema: diagnosis:  diagnosisid [ number]  patientunitstayid [ number]  diagnosisname [ text]  diagnosistime [ time]  icd9code [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: the number of intensive care unit visits that patient 035-2205 had during this year.It is not neccessary to use all the tables.[/INST] SELECT COUNT(DISTINCT patient.patientunitstayid) FROM patient WHERE patient.patienthealthsystemstayid IN (SELECT patient.patienthealthsystemstayid FROM patient WHERE patient.uniquepid = '035-2205') AND DATETIME(patient.unitadmittime, 'start of year') = DATETIME(CURRENT_TIME(), 'start of year', '-0 year')"
"[INST] Here is a database schema: table schema: prescriptions:  subject_id [ text]  hadm_id [ text]  icustay_id [ text]  drug_type [ text]  drug [ text]  formulary_drug_cd [ text]  route [ text]  drug_dose [ text] 
table schema: procedures:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: lab:  subject_id [ text]  hadm_id [ text]  itemid [ text]  charttime [ text]  flag [ text]  value_unit [ text]  label [ text]  fluid [ text] 
table schema: diagnoses:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: demographic:  subject_id [ text]  hadm_id [ text]  name [ text]  marital_status [ text]  age [ text]  dob [ text]  gender [ text]  language [ text]  religion [ text]  admission_type [ text]  days_stay [ text]  insurance [ text]  ethnicity [ text]  expire_flag [ text]  admission_location [ text]  discharge_location [ text]  diagnosis [ text]  dod [ text]  dob_year [ text]  dod_year [ text]  admittime [ text]  dischtime [ text]  admityear [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: how many patients whose admission year is less than 2184 and diagnoses long title is seroma complicating a procedure?It is not neccessary to use all the tables.[/INST] SELECT COUNT(DISTINCT demographic.subject_id) FROM demographic INNER JOIN diagnoses ON demographic.hadm_id = diagnoses.hadm_id WHERE demographic.admityear < ""2184"" AND diagnoses.long_title = ""Seroma complicating a procedure"""
"[INST] Here is a database schema: table schema: cost:  row_id [ number]  subject_id [ number]  hadm_id [ number]  event_type [ text]  event_id [ number]  chargetime [ time]  cost [ number] 
table schema: labevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  itemid [ number]  charttime [ time]  valuenum [ number]  valueuom [ text] 
table schema: admissions:  row_id [ number]  subject_id [ number]  hadm_id [ number]  admittime [ time]  dischtime [ time]  admission_type [ text]  admission_location [ text]  discharge_location [ text]  insurance [ text]  language [ text]  marital_status [ text]  ethnicity [ text]  age [ number] 
table schema: prescriptions:  row_id [ number]  subject_id [ number]  hadm_id [ number]  startdate [ time]  enddate [ time]  drug [ text]  dose_val_rx [ text]  dose_unit_rx [ text]  route [ text] 
table schema: d_icd_procedures:  row_id [ number]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: d_items:  row_id [ number]  itemid [ number]  label [ text]  linksto [ text] 
table schema: microbiologyevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  charttime [ time]  spec_type_desc [ text]  org_name [ text] 
table schema: transfers:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  eventtype [ text]  careunit [ text]  wardid [ number]  intime [ time]  outtime [ time] 
table schema: outputevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  charttime [ time]  itemid [ number]  value [ number] 
table schema: inputevents_cv:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  charttime [ time]  itemid [ number]  amount [ number] 
table schema: chartevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  itemid [ number]  charttime [ time]  valuenum [ number]  valueuom [ text] 
table schema: icustays:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  first_careunit [ text]  last_careunit [ text]  first_wardid [ number]  last_wardid [ number]  intime [ time]  outtime [ time] 
table schema: d_icd_diagnoses:  row_id [ number]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: diagnoses_icd:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icd9_code [ text]  charttime [ time] 
table schema: procedures_icd:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icd9_code [ text]  charttime [ time] 
table schema: d_labitems:  row_id [ number]  itemid [ number]  label [ text] 
table schema: patients:  row_id [ number]  subject_id [ number]  gender [ text]  dob [ time]  dod [ time] 
  Please write me a syntactically correct SQL statement that answers the following question: what are patient 25869's genders?It is not neccessary to use all the tables.[/INST] SELECT patients.gender FROM patients WHERE patients.subject_id = 25869"
"[INST] Here is a database schema: table schema: program_requirement:  program_id [ int]  category [ varchar]  min_credit [ int]  additional_req [ varchar] 
table schema: offering_instructor:  offering_instructor_id [ int]  offering_id [ int]  instructor_id [ int] 
table schema: program:  program_id [ int]  name [ varchar]  college [ varchar]  introduction [ varchar] 
table schema: course_prerequisite:  pre_course_id [ int]  course_id [ int] 
table schema: course_offering:  offering_id [ int]  course_id [ int]  semester [ int]  section_number [ int]  start_time [ time]  end_time [ time]  monday [ varchar]  tuesday [ varchar]  wednesday [ varchar]  thursday [ varchar]  friday [ varchar]  saturday [ varchar]  sunday [ varchar]  has_final_project [ varchar]  has_final_exam [ varchar]  textbook [ varchar]  class_address [ varchar]  allow_audit [ varchar] 
table schema: jobs:  job_id [ int]  job_title [ varchar]  description [ varchar]  requirement [ varchar]  city [ varchar]  state [ varchar]  country [ varchar]  zip [ int] 
table schema: student:  student_id [ int]  lastname [ varchar]  firstname [ varchar]  program_id [ int]  declare_major [ varchar]  total_credit [ int]  total_gpa [ float]  entered_as [ varchar]  admit_term [ int]  predicted_graduation_semester [ int]  degree [ varchar]  minor [ varchar]  internship [ varchar] 
table schema: gsi:  course_offering_id [ int]  student_id [ int] 
table schema: instructor:  instructor_id [ int]  name [ varchar]  uniqname [ varchar] 
table schema: semester:  semester_id [ int]  semester [ varchar]  year [ int] 
table schema: area:  course_id [ int]  area [ varchar] 
table schema: course_tags_count:  course_id [ int]  clear_grading [ int]  pop_quiz [ int]  group_projects [ int]  inspirational [ int]  long_lectures [ int]  extra_credit [ int]  few_tests [ int]  good_feedback [ int]  tough_tests [ int]  heavy_papers [ int]  cares_for_students [ int]  heavy_assignments [ int]  respected [ int]  participation [ int]  heavy_reading [ int]  tough_grader [ int]  hilarious [ int]  would_take_again [ int]  good_lecture [ int]  no_skip [ int] 
table schema: comment_instructor:  instructor_id [ int]  student_id [ int]  score [ int]  comment_text [ varchar] 
table schema: student_record:  student_id [ int]  course_id [ int]  semester [ int]  grade [ varchar]  how [ varchar]  transfer_source [ varchar]  earn_credit [ varchar]  repeat_term [ varchar]  test_id [ varchar] 
table schema: requirement:  requirement_id [ int]  requirement [ varchar]  college [ varchar] 
table schema: ta:  campus_job_id [ int]  student_id [ int]  location [ varchar] 
table schema: program_course:  program_id [ int]  course_id [ int]  workload [ int]  category [ varchar] 
table schema: course:  course_id [ int]  name [ varchar]  department [ varchar]  number [ varchar]  credits [ varchar]  advisory_requirement [ varchar]  enforced_requirement [ varchar]  description [ varchar]  num_semesters [ int]  num_enrolled [ int]  has_discussion [ varchar]  has_lab [ varchar]  has_projects [ varchar]  has_exams [ varchar]  num_reviews [ int]  clarity_score [ int]  easiness_score [ int]  helpfulness_score [ int] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the most common prerequisite this semester ?It is not neccessary to use all the tables.[/INST] SELECT COUNT(DISTINCT course_prerequisite.course_id), course.department, course.name, course.number FROM course, course_offering, course_prerequisite, semester WHERE course.course_id = course_offering.course_id AND course.course_id = course_prerequisite.pre_course_id AND course.department = 'EECS' AND semester.semester = 'WN' AND semester.semester_id = course_offering.semester AND semester.year = 2016 GROUP BY course_prerequisite.pre_course_id ORDER BY COUNT(course_prerequisite.course_id) DESC"
"[INST] Here is a database schema: table schema: table_80288:  ""Heat"" [ real]  ""Lane"" [ real]  ""Name"" [ text]  ""Nationality"" [ text]  ""Time"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what is the name that saw 4 heats and a lane higher than 7?It is not neccessary to use all the tables.[/INST] SELECT ""Name"" FROM table_80288 WHERE ""Heat"" = '4' AND ""Lane"" > '7'"
"[INST] Here is a database schema: table schema: procedures:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: demographic:  subject_id [ text]  hadm_id [ text]  name [ text]  marital_status [ text]  age [ text]  dob [ text]  gender [ text]  language [ text]  religion [ text]  admission_type [ text]  days_stay [ text]  insurance [ text]  ethnicity [ text]  expire_flag [ text]  admission_location [ text]  discharge_location [ text]  diagnosis [ text]  dod [ text]  dob_year [ text]  dod_year [ text]  admittime [ text]  dischtime [ text]  admityear [ text] 
table schema: lab:  subject_id [ text]  hadm_id [ text]  itemid [ text]  charttime [ text]  flag [ text]  value_unit [ text]  label [ text]  fluid [ text] 
table schema: diagnoses:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: prescriptions:  subject_id [ text]  hadm_id [ text]  icustay_id [ text]  drug_type [ text]  drug [ text]  formulary_drug_cd [ text]  route [ text]  drug_dose [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what is the number of patients on main type drug prescription who had diagnoses of angioneurotic edema, not elsewhere classified?It is not neccessary to use all the tables.[/INST] SELECT COUNT(DISTINCT demographic.subject_id) FROM demographic INNER JOIN diagnoses ON demographic.hadm_id = diagnoses.hadm_id INNER JOIN prescriptions ON demographic.hadm_id = prescriptions.hadm_id WHERE diagnoses.long_title = ""Angioneurotic edema, not elsewhere classified"" AND prescriptions.drug_type = ""MAIN"""
"[INST] Here is a database schema: table schema: table_name_56:  no_2 [ VARCHAR]  no_9 [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is No. 2, when No. 9 is Mia?It is not neccessary to use all the tables.[/INST] SELECT no_2 FROM table_name_56 WHERE no_9 = ""mia"""
"[INST] Here is a database schema: table schema: table_65399:  ""Tournament"" [ text]  ""2007"" [ text]  ""2008"" [ text]  ""2009"" [ text]  ""2010"" [ text]  ""2011"" [ text]  ""2012"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What shows for 2009 when 2008 is A, 2012 is 1r, 2010 is q2, and 2011 is 2r?It is not neccessary to use all the tables.[/INST] SELECT ""2009"" FROM table_65399 WHERE ""2008"" = 'a' AND ""2012"" = '1r' AND ""2010"" = 'q2' AND ""2011"" = '2r'"
"[INST] Here is a database schema: table schema: procedures_icd:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icd9_code [ text]  charttime [ time] 
table schema: diagnoses_icd:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icd9_code [ text]  charttime [ time] 
table schema: d_items:  row_id [ number]  itemid [ number]  label [ text]  linksto [ text] 
table schema: d_icd_diagnoses:  row_id [ number]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: inputevents_cv:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  charttime [ time]  itemid [ number]  amount [ number] 
table schema: prescriptions:  row_id [ number]  subject_id [ number]  hadm_id [ number]  startdate [ time]  enddate [ time]  drug [ text]  dose_val_rx [ text]  dose_unit_rx [ text]  route [ text] 
table schema: d_icd_procedures:  row_id [ number]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: transfers:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  eventtype [ text]  careunit [ text]  wardid [ number]  intime [ time]  outtime [ time] 
table schema: patients:  row_id [ number]  subject_id [ number]  gender [ text]  dob [ time]  dod [ time] 
table schema: cost:  row_id [ number]  subject_id [ number]  hadm_id [ number]  event_type [ text]  event_id [ number]  chargetime [ time]  cost [ number] 
table schema: chartevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  itemid [ number]  charttime [ time]  valuenum [ number]  valueuom [ text] 
table schema: admissions:  row_id [ number]  subject_id [ number]  hadm_id [ number]  admittime [ time]  dischtime [ time]  admission_type [ text]  admission_location [ text]  discharge_location [ text]  insurance [ text]  language [ text]  marital_status [ text]  ethnicity [ text]  age [ number] 
table schema: outputevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  charttime [ time]  itemid [ number]  value [ number] 
table schema: icustays:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  first_careunit [ text]  last_careunit [ text]  first_wardid [ number]  last_wardid [ number]  intime [ time]  outtime [ time] 
table schema: microbiologyevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  charttime [ time]  spec_type_desc [ text]  org_name [ text] 
table schema: labevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  itemid [ number]  charttime [ time]  valuenum [ number]  valueuom [ text] 
table schema: d_labitems:  row_id [ number]  itemid [ number]  label [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what was the first time patient 12927 had a maximum of hematocrit in this month?It is not neccessary to use all the tables.[/INST] SELECT labevents.charttime FROM labevents WHERE labevents.hadm_id IN (SELECT admissions.hadm_id FROM admissions WHERE admissions.subject_id = 12927) AND labevents.itemid IN (SELECT d_labitems.itemid FROM d_labitems WHERE d_labitems.label = 'hematocrit') AND DATETIME(labevents.charttime, 'start of month') = DATETIME(CURRENT_TIME(), 'start of month', '-0 month') ORDER BY labevents.valuenum DESC, labevents.charttime LIMIT 1"
"[INST] Here is a database schema: table schema: diagnoses:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: procedures:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: demographic:  subject_id [ text]  hadm_id [ text]  name [ text]  marital_status [ text]  age [ text]  dob [ text]  gender [ text]  language [ text]  religion [ text]  admission_type [ text]  days_stay [ text]  insurance [ text]  ethnicity [ text]  expire_flag [ text]  admission_location [ text]  discharge_location [ text]  diagnosis [ text]  dod [ text]  dob_year [ text]  dod_year [ text]  admittime [ text]  dischtime [ text]  admityear [ text] 
table schema: prescriptions:  subject_id [ text]  hadm_id [ text]  icustay_id [ text]  drug_type [ text]  drug [ text]  formulary_drug_cd [ text]  route [ text]  drug_dose [ text] 
table schema: lab:  subject_id [ text]  hadm_id [ text]  itemid [ text]  charttime [ text]  flag [ text]  value_unit [ text]  label [ text]  fluid [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what is the number of patients whose age is less than 89 and diagnoses long title is benzodiazepine-based tranquilizers causing adverse effects in therapeutic use?It is not neccessary to use all the tables.[/INST] SELECT COUNT(DISTINCT demographic.subject_id) FROM demographic INNER JOIN diagnoses ON demographic.hadm_id = diagnoses.hadm_id WHERE demographic.age < ""89"" AND diagnoses.long_title = ""Benzodiazepine-based tranquilizers causing adverse effects in therapeutic use"""
"[INST] Here is a database schema: table schema: election:  Election_ID [ int]  Counties_Represented [ text]  District [ int]  Delegate [ text]  Party [ int]  First_Elected [ real]  Committee [ text] 
table schema: county:  County_Id [ int]  County_name [ text]  Population [ real]  Zip_code [ text] 
table schema: party:  Party_ID [ int]  Year [ real]  Party [ text]  Governor [ text]  Lieutenant_Governor [ text]  Comptroller [ text]  Attorney_General [ text]  US_Senate [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: For each party, return the name of the party and the number of delegates from that party Plot them as bar chart, and sort bar from high to low order.It is not neccessary to use all the tables.[/INST] SELECT T2.Party, AVG(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY T2.Party DESC"
"[INST] Here is a database schema: table schema: table_37902:  ""District"" [ text]  ""Incumbent"" [ text]  ""Party"" [ text]  ""Result"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: Which First elected has a Incumbent of none (new seat)?It is not neccessary to use all the tables.[/INST] SELECT ""First elected"" FROM table_37902 WHERE ""Incumbent"" = 'none (new seat)'"
"[INST] Here is a database schema: table schema: table_57549:  ""Player"" [ text]  ""Position"" [ text]  ""School"" [ text]  ""Hometown"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What MLB draft has a School of green valley high school?It is not neccessary to use all the tables.[/INST] SELECT ""MLB Draft"" FROM table_57549 WHERE ""School"" = 'green valley high school'"
"[INST] Here is a database schema: table schema: table_name_24:  score [ VARCHAR]  surface [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What was the score of the game that was played on a grass surface?It is not neccessary to use all the tables.[/INST] SELECT score FROM table_name_24 WHERE surface = ""grass"""
"[INST] Here is a database schema: table schema: Student_Course_Enrolment:  registration_id [ INTEGER]  student_id [ INTEGER]  course_id [ INTEGER]  date_of_enrolment [ DATETIME]  date_of_completion [ DATETIME] 
table schema: Courses:  course_id [ INTEGER]  author_id [ INTEGER]  subject_id [ INTEGER]  course_name [ VARCHAR(120)]  course_description [ VARCHAR(255)] 
table schema: Students:  student_id [ INTEGER]  date_of_registration [ DATETIME]  date_of_latest_logon [ DATETIME]  login_name [ VARCHAR(40)]  password [ VARCHAR(10)]  personal_name [ VARCHAR(40)]  middle_name [ VARCHAR(40)]  family_name [ VARCHAR(40)] 
table schema: Subjects:  subject_id [ INTEGER]  subject_name [ VARCHAR(120)] 
table schema: Student_Tests_Taken:  registration_id [ INTEGER]  date_test_taken [ DATETIME]  test_result [ VARCHAR(255)] 
table schema: Course_Authors_and_Tutors:  author_id [ INTEGER]  author_tutor_ATB [ VARCHAR(3)]  login_name [ VARCHAR(40)]  password [ VARCHAR(40)]  personal_name [ VARCHAR(80)]  middle_name [ VARCHAR(80)]  family_name [ VARCHAR(80)]  gender_mf [ VARCHAR(1)]  address_line_1 [ VARCHAR(80)] 
  Please write me a syntactically correct SQL statement that answers the following question: How many courses for each subject? Plot a bar chart, and list by the Y in asc please.It is not neccessary to use all the tables.[/INST] SELECT subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*)"
"[INST] Here is a database schema: table schema: prescriptions:  subject_id [ text]  hadm_id [ text]  icustay_id [ text]  drug_type [ text]  drug [ text]  formulary_drug_cd [ text]  route [ text]  drug_dose [ text] 
table schema: lab:  subject_id [ text]  hadm_id [ text]  itemid [ text]  charttime [ text]  flag [ text]  value_unit [ text]  label [ text]  fluid [ text] 
table schema: diagnoses:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: demographic:  subject_id [ text]  hadm_id [ text]  name [ text]  marital_status [ text]  age [ text]  dob [ text]  gender [ text]  language [ text]  religion [ text]  admission_type [ text]  days_stay [ text]  insurance [ text]  ethnicity [ text]  expire_flag [ text]  admission_location [ text]  discharge_location [ text]  diagnosis [ text]  dod [ text]  dob_year [ text]  dod_year [ text]  admittime [ text]  dischtime [ text]  admityear [ text] 
table schema: procedures:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what is the number of patients whose death status is 0 and year of birth is less than 2083?It is not neccessary to use all the tables.[/INST] SELECT COUNT(DISTINCT demographic.subject_id) FROM demographic WHERE demographic.expire_flag = ""0"" AND demographic.dob_year < ""2083"""
"[INST] Here is a database schema: table schema: table_66211:  ""Rank"" [ real]  ""Athlete"" [ text]  ""Country"" [ text]  ""Time"" [ text]  ""Notes"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what is the country for zhang xiuyun?It is not neccessary to use all the tables.[/INST] SELECT ""Country"" FROM table_66211 WHERE ""Athlete"" = 'zhang xiuyun'"
"[INST] Here is a database schema: table schema: table_name_54:  case_suffix__case_ [ VARCHAR]  english_meaning [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is Case Suffix (Case), when English Meaning is 'to Georgia, in Georgia'?It is not neccessary to use all the tables.[/INST] SELECT case_suffix__case_ FROM table_name_54 WHERE english_meaning = ""to georgia, in georgia"""
"[INST] Here is a database schema: table schema: code_description:  code [ varchar]  description [ text] 
table schema: food_service:  meal_code [ text]  meal_number [ int]  compartment [ text]  meal_description [ varchar] 
table schema: dual_carrier:  main_airline [ varchar]  low_flight_number [ int]  high_flight_number [ int]  dual_airline [ varchar]  service_name [ text] 
table schema: flight_fare:  flight_id [ int]  fare_id [ int] 
table schema: flight_leg:  flight_id [ int]  leg_number [ int]  leg_flight [ int] 
table schema: city:  city_code [ varchar]  city_name [ varchar]  state_code [ varchar]  country_name [ varchar]  time_zone_code [ varchar] 
table schema: time_interval:  period [ text]  begin_time [ int]  end_time [ int] 
table schema: days:  days_code [ varchar]  day_name [ varchar] 
table schema: equipment_sequence:  aircraft_code_sequence [ varchar]  aircraft_code [ varchar] 
table schema: flight_stop:  flight_id [ int]  stop_number [ int]  stop_days [ text]  stop_airport [ text]  arrival_time [ int]  arrival_airline [ text]  arrival_flight_number [ int]  departure_time [ int]  departure_airline [ text]  departure_flight_number [ int]  stop_time [ int] 
table schema: flight:  aircraft_code_sequence [ text]  airline_code [ varchar]  airline_flight [ text]  arrival_time [ int]  connections [ int]  departure_time [ int]  dual_carrier [ text]  flight_days [ text]  flight_id [ int]  flight_number [ int]  from_airport [ varchar]  meal_code [ text]  stops [ int]  time_elapsed [ int]  to_airport [ varchar] 
table schema: airport:  airport_code [ varchar]  airport_name [ text]  airport_location [ text]  state_code [ varchar]  country_name [ varchar]  time_zone_code [ varchar]  minimum_connect_time [ int] 
table schema: date_day:  month_number [ int]  day_number [ int]  year [ int]  day_name [ varchar] 
table schema: time_zone:  time_zone_code [ text]  time_zone_name [ text]  hours_from_gmt [ int] 
table schema: class_of_service:  booking_class [ varchar]  rank [ int]  class_description [ text] 
table schema: airline:  airline_code [ varchar]  airline_name [ text]  note [ text] 
table schema: compartment_class:  compartment [ varchar]  class_type [ varchar] 
table schema: state:  state_code [ text]  state_name [ text]  country_name [ text] 
table schema: aircraft:  aircraft_code [ varchar]  aircraft_description [ varchar]  manufacturer [ varchar]  basic_type [ varchar]  engines [ int]  propulsion [ varchar]  wide_body [ varchar]  wing_span [ int]  length [ int]  weight [ int]  capacity [ int]  pay_load [ int]  cruising_speed [ int]  range_miles [ int]  pressurized [ varchar] 
table schema: fare_basis:  fare_basis_code [ text]  booking_class [ text]  class_type [ text]  premium [ text]  economy [ text]  discounted [ text]  night [ text]  season [ text]  basis_days [ text] 
table schema: ground_service:  city_code [ text]  airport_code [ text]  transport_type [ text]  ground_fare [ int] 
table schema: fare:  fare_id [ int]  from_airport [ varchar]  to_airport [ varchar]  fare_basis_code [ text]  fare_airline [ text]  restriction_code [ text]  one_direction_cost [ int]  round_trip_cost [ int]  round_trip_required [ varchar] 
table schema: airport_service:  city_code [ varchar]  airport_code [ varchar]  miles_distant [ int]  direction [ varchar]  minutes_distant [ int] 
table schema: restriction:  restriction_code [ text]  advance_purchase [ int]  stopovers [ text]  saturday_stay_required [ text]  minimum_stay [ int]  maximum_stay [ int]  application [ text]  no_discounts [ text] 
table schema: month:  month_number [ int]  month_name [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: show me ground transportation in WESTCHESTER COUNTYIt is not neccessary to use all the tables.[/INST] SELECT DISTINCT ground_service.transport_type FROM city, ground_service WHERE city.city_name = 'WESTCHESTER COUNTY' AND ground_service.city_code = city.city_code"
"[INST] Here is a database schema: table schema: table_name_34:  owner_s_ [ VARCHAR]  description [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What owner or owners have an operational description?It is not neccessary to use all the tables.[/INST] SELECT owner_s_ FROM table_name_34 WHERE description = ""operational"""
"[INST] Here is a database schema: table schema: demographic:  subject_id [ text]  hadm_id [ text]  name [ text]  marital_status [ text]  age [ text]  dob [ text]  gender [ text]  language [ text]  religion [ text]  admission_type [ text]  days_stay [ text]  insurance [ text]  ethnicity [ text]  expire_flag [ text]  admission_location [ text]  discharge_location [ text]  diagnosis [ text]  dod [ text]  dob_year [ text]  dod_year [ text]  admittime [ text]  dischtime [ text]  admityear [ text] 
table schema: lab:  subject_id [ text]  hadm_id [ text]  itemid [ text]  charttime [ text]  flag [ text]  value_unit [ text]  label [ text]  fluid [ text] 
table schema: procedures:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: prescriptions:  subject_id [ text]  hadm_id [ text]  icustay_id [ text]  drug_type [ text]  drug [ text]  formulary_drug_cd [ text]  route [ text]  drug_dose [ text] 
table schema: diagnoses:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what is maximum days of hospital stay of patients whose primary disease is hypoxia?It is not neccessary to use all the tables.[/INST] SELECT MAX(demographic.days_stay) FROM demographic WHERE demographic.diagnosis = ""HYPOXIA"""
"[INST] Here is a database schema: table schema: table_203_847:  id [ number]  ""turnover"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: what year had the least net profit ?It is not neccessary to use all the tables.[/INST] SELECT ""financial year"" FROM table_203_847 ORDER BY ""net profit"" LIMIT 1"
"[INST] Here is a database schema: table schema: table_name_56:  date [ VARCHAR]  game [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: On what day was game 2 played?It is not neccessary to use all the tables.[/INST] SELECT date FROM table_name_56 WHERE game = 2"
"[INST] Here is a database schema: table schema: table_name_53:  tie_no [ VARCHAR]  away_team [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What was the tie number for the round against visiting opponent Newcastle United?It is not neccessary to use all the tables.[/INST] SELECT tie_no FROM table_name_53 WHERE away_team = ""newcastle united"""
"[INST] Here is a database schema: table schema: table_51915:  ""Venue"" [ text]  ""Crowd"" [ real]  ""Date"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: How many people were in the crowd when the away team scored 15.18 (108)?It is not neccessary to use all the tables.[/INST] SELECT ""Crowd"" FROM table_51915 WHERE ""Away team score"" = '15.18 (108)'"
"[INST] Here is a database schema: table schema: table_name_9:  city_of_license [ VARCHAR]  station [ VARCHAR]  network_affiliation [ VARCHAR]  format [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: Which city of license has an independent network affiliation, a variety format and is station KKUP?It is not neccessary to use all the tables.[/INST] SELECT city_of_license FROM table_name_9 WHERE network_affiliation = ""independent"" AND format = ""variety"" AND station = ""kkup"""
"[INST] Here is a database schema: table schema: table_49866:  ""Date"" [ text]  ""Score"" [ text]  ""Venue"" [ text]  ""Report"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: Which report is for Townsville Entertainment Centre?It is not neccessary to use all the tables.[/INST] SELECT ""Report"" FROM table_49866 WHERE ""Venue"" = 'townsville entertainment centre'"
"[INST] Here is a database schema: table schema: table_14154:  ""Year"" [ real]  ""September"" [ text]  ""October"" [ text]  ""November"" [ text]  ""December"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: Who is in November after 1988 when Prinzzess is in October?It is not neccessary to use all the tables.[/INST] SELECT ""November"" FROM table_14154 WHERE ""Year"" > '1988' AND ""October"" = 'prinzzess'"
"[INST] Here is a database schema: table schema: table_38699:  ""Stage"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: When Yusuke Hatanaka was the stage winner in the tonton susanto general classification, what was the malaysian rider classification?It is not neccessary to use all the tables.[/INST] SELECT ""Malaysian rider classification"" FROM table_38699 WHERE ""General classification"" = 'tonton susanto' AND ""Stage winner"" = 'yusuke hatanaka'"
"[INST] Here is a database schema: table schema: admissions:  row_id [ number]  subject_id [ number]  hadm_id [ number]  admittime [ time]  dischtime [ time]  admission_type [ text]  admission_location [ text]  discharge_location [ text]  insurance [ text]  language [ text]  marital_status [ text]  ethnicity [ text]  age [ number] 
table schema: d_items:  row_id [ number]  itemid [ number]  label [ text]  linksto [ text] 
table schema: d_labitems:  row_id [ number]  itemid [ number]  label [ text] 
table schema: d_icd_diagnoses:  row_id [ number]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: transfers:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  eventtype [ text]  careunit [ text]  wardid [ number]  intime [ time]  outtime [ time] 
table schema: chartevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  itemid [ number]  charttime [ time]  valuenum [ number]  valueuom [ text] 
table schema: microbiologyevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  charttime [ time]  spec_type_desc [ text]  org_name [ text] 
table schema: diagnoses_icd:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icd9_code [ text]  charttime [ time] 
table schema: inputevents_cv:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  charttime [ time]  itemid [ number]  amount [ number] 
table schema: patients:  row_id [ number]  subject_id [ number]  gender [ text]  dob [ time]  dod [ time] 
table schema: procedures_icd:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icd9_code [ text]  charttime [ time] 
table schema: prescriptions:  row_id [ number]  subject_id [ number]  hadm_id [ number]  startdate [ time]  enddate [ time]  drug [ text]  dose_val_rx [ text]  dose_unit_rx [ text]  route [ text] 
table schema: d_icd_procedures:  row_id [ number]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: outputevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  charttime [ time]  itemid [ number]  value [ number] 
table schema: icustays:  row_id [ number]  subject_id [ number]  hadm_id [ number]  icustay_id [ number]  first_careunit [ text]  last_careunit [ text]  first_wardid [ number]  last_wardid [ number]  intime [ time]  outtime [ time] 
table schema: labevents:  row_id [ number]  subject_id [ number]  hadm_id [ number]  itemid [ number]  charttime [ time]  valuenum [ number]  valueuom [ text] 
table schema: cost:  row_id [ number]  subject_id [ number]  hadm_id [ number]  event_type [ text]  event_id [ number]  chargetime [ time]  cost [ number] 
  Please write me a syntactically correct SQL statement that answers the following question: tell me the method of intake of clobetasol propionate 0.05% ointment?It is not neccessary to use all the tables.[/INST] SELECT DISTINCT prescriptions.route FROM prescriptions WHERE prescriptions.drug = 'clobetasol propionate 0.05% ointment'"
"[INST] Here is a database schema: table schema: table_26493520_1:  title [ VARCHAR]  written_by [ VARCHAR]  directed_by [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: How many episodes were written by Alexander Woo and directed by Scott Winant?It is not neccessary to use all the tables.[/INST] SELECT COUNT(title) FROM table_26493520_1 WHERE written_by = ""Alexander Woo"" AND directed_by = ""Scott Winant"""
"[INST] Here is a database schema: table schema: diagnoses:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: lab:  subject_id [ text]  hadm_id [ text]  itemid [ text]  charttime [ text]  flag [ text]  value_unit [ text]  label [ text]  fluid [ text] 
table schema: demographic:  subject_id [ text]  hadm_id [ text]  name [ text]  marital_status [ text]  age [ text]  dob [ text]  gender [ text]  language [ text]  religion [ text]  admission_type [ text]  days_stay [ text]  insurance [ text]  ethnicity [ text]  expire_flag [ text]  admission_location [ text]  discharge_location [ text]  diagnosis [ text]  dod [ text]  dob_year [ text]  dod_year [ text]  admittime [ text]  dischtime [ text]  admityear [ text] 
table schema: procedures:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: prescriptions:  subject_id [ text]  hadm_id [ text]  icustay_id [ text]  drug_type [ text]  drug [ text]  formulary_drug_cd [ text]  route [ text]  drug_dose [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: give the number of patients whose admission year is before 2111 and lab test fluid is pleural.It is not neccessary to use all the tables.[/INST] SELECT COUNT(DISTINCT demographic.subject_id) FROM demographic INNER JOIN lab ON demographic.hadm_id = lab.hadm_id WHERE demographic.admityear < ""2111"" AND lab.fluid = ""Pleural"""
"[INST] Here is a database schema: table schema: table_32707:  ""Week"" [ real]  ""Date"" [ text]  ""Opponent"" [ text]  ""Result"" [ text]  ""Record"" [ text]  ""Attendance"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What's the result for the game held on December 27, 2004 with a week greater than 2?It is not neccessary to use all the tables.[/INST] SELECT ""Result"" FROM table_32707 WHERE ""Week"" > '2' AND ""Date"" = 'december 27, 2004'"
"[INST] Here is a database schema: table schema: table_name_37:  interregnum_ended [ VARCHAR]  count_palatine_of_saxony [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the Interregnum ended for Count Palatine of Saxony of frederick augustus i, elector of saxony?It is not neccessary to use all the tables.[/INST] SELECT interregnum_ended FROM table_name_37 WHERE count_palatine_of_saxony = ""frederick augustus i, elector of saxony"""
"[INST] Here is a database schema: table schema: table_27295:  ""Freq"" [ real]  ""Call"" [ text]  ""City"" [ text]  ""Owner"" [ text]  ""Start"" [ real]  ""Nickname"" [ text]  ""Format"" [ text]  ""Stereo"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: In what year was cumulus founded?It is not neccessary to use all the tables.[/INST] SELECT MIN(""Start"") FROM table_27295 WHERE ""Owner"" = 'Cumulus'"
"[INST] Here is a database schema: table schema: CloseReasonTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: Badges:  Id [ number]  UserId [ number]  Name [ text]  Date [ time]  Class [ number]  TagBased [ boolean] 
table schema: PostLinks:  Id [ number]  CreationDate [ time]  PostId [ number]  RelatedPostId [ number]  LinkTypeId [ number] 
table schema: ReviewTaskStates:  Id [ number]  Name [ text]  Description [ text] 
table schema: PostHistoryTypes:  Id [ number]  Name [ text] 
table schema: Tags:  Id [ number]  TagName [ text]  Count [ number]  ExcerptPostId [ number]  WikiPostId [ number] 
table schema: FlagTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: PostNotices:  Id [ number]  PostId [ number]  PostNoticeTypeId [ number]  CreationDate [ time]  DeletionDate [ time]  ExpiryDate [ time]  Body [ text]  OwnerUserId [ number]  DeletionUserId [ number] 
table schema: Comments:  Id [ number]  PostId [ number]  Score [ number]  Text [ text]  CreationDate [ time]  UserDisplayName [ text]  UserId [ number]  ContentLicense [ text] 
table schema: VoteTypes:  Id [ number]  Name [ text] 
table schema: ReviewRejectionReasons:  Id [ number]  Name [ text]  Description [ text]  PostTypeId [ number] 
table schema: CloseAsOffTopicReasonTypes:  Id [ number]  IsUniversal [ boolean]  InputTitle [ text]  MarkdownInputGuidance [ text]  MarkdownPostOwnerGuidance [ text]  MarkdownPrivilegedUserGuidance [ text]  MarkdownConcensusDescription [ text]  CreationDate [ time]  CreationModeratorId [ number]  ApprovalDate [ time]  ApprovalModeratorId [ number]  DeactivationDate [ time]  DeactivationModeratorId [ number] 
table schema: ReviewTaskResultTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: SuggestedEdits:  Id [ number]  PostId [ number]  CreationDate [ time]  ApprovalDate [ time]  RejectionDate [ time]  OwnerUserId [ number]  Comment [ text]  Text [ text]  Title [ text]  Tags [ text]  RevisionGUID [ other] 
table schema: ReviewTasks:  Id [ number]  ReviewTaskTypeId [ number]  CreationDate [ time]  DeletionDate [ time]  ReviewTaskStateId [ number]  PostId [ number]  SuggestedEditId [ number]  CompletedByReviewTaskId [ number] 
table schema: PostNoticeTypes:  Id [ number]  ClassId [ number]  Name [ text]  Body [ text]  IsHidden [ boolean]  Predefined [ boolean]  PostNoticeDurationId [ number] 
table schema: PostFeedback:  Id [ number]  PostId [ number]  IsAnonymous [ boolean]  VoteTypeId [ number]  CreationDate [ time] 
table schema: ReviewTaskResults:  Id [ number]  ReviewTaskId [ number]  ReviewTaskResultTypeId [ number]  CreationDate [ time]  RejectionReasonId [ number]  Comment [ text] 
table schema: PostTags:  PostId [ number]  TagId [ number] 
table schema: PostsWithDeleted:  Id [ number]  PostTypeId [ number]  AcceptedAnswerId [ number]  ParentId [ number]  CreationDate [ time]  DeletionDate [ time]  Score [ number]  ViewCount [ number]  Body [ text]  OwnerUserId [ number]  OwnerDisplayName [ text]  LastEditorUserId [ number]  LastEditorDisplayName [ text]  LastEditDate [ time]  LastActivityDate [ time]  Title [ text]  Tags [ text]  AnswerCount [ number]  CommentCount [ number]  FavoriteCount [ number]  ClosedDate [ time]  CommunityOwnedDate [ time]  ContentLicense [ text] 
table schema: SuggestedEditVotes:  Id [ number]  SuggestedEditId [ number]  UserId [ number]  VoteTypeId [ number]  CreationDate [ time]  TargetUserId [ number]  TargetRepChange [ number] 
table schema: Votes:  Id [ number]  PostId [ number]  VoteTypeId [ number]  UserId [ number]  CreationDate [ time]  BountyAmount [ number] 
table schema: PendingFlags:  Id [ number]  FlagTypeId [ number]  PostId [ number]  CreationDate [ time]  CloseReasonTypeId [ number]  CloseAsOffTopicReasonTypeId [ number]  DuplicateOfQuestionId [ number]  BelongsOnBaseHostAddress [ text] 
table schema: PostHistory:  Id [ number]  PostHistoryTypeId [ number]  PostId [ number]  RevisionGUID [ other]  CreationDate [ time]  UserId [ number]  UserDisplayName [ text]  Comment [ text]  Text [ text]  ContentLicense [ text] 
table schema: ReviewTaskTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: PostTypes:  Id [ number]  Name [ text] 
table schema: TagSynonyms:  Id [ number]  SourceTagName [ text]  TargetTagName [ text]  CreationDate [ time]  OwnerUserId [ number]  AutoRenameCount [ number]  LastAutoRename [ time]  Score [ number]  ApprovedByUserId [ number]  ApprovalDate [ time] 
table schema: Posts:  Id [ number]  PostTypeId [ number]  AcceptedAnswerId [ number]  ParentId [ number]  CreationDate [ time]  DeletionDate [ time]  Score [ number]  ViewCount [ number]  Body [ text]  OwnerUserId [ number]  OwnerDisplayName [ text]  LastEditorUserId [ number]  LastEditorDisplayName [ text]  LastEditDate [ time]  LastActivityDate [ time]  Title [ text]  Tags [ text]  AnswerCount [ number]  CommentCount [ number]  FavoriteCount [ number]  ClosedDate [ time]  CommunityOwnedDate [ time]  ContentLicense [ text] 
table schema: Users:  Id [ number]  Reputation [ number]  CreationDate [ time]  DisplayName [ text]  LastAccessDate [ time]  WebsiteUrl [ text]  Location [ text]  AboutMe [ text]  Views [ number]  UpVotes [ number]  DownVotes [ number]  ProfileImageUrl [ text]  EmailHash [ text]  AccountId [ number] 
  Please write me a syntactically correct SQL statement that answers the following question: Top 1000 users from India.It is not neccessary to use all the tables.[/INST] SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS ""#"", Id AS ""user_link"", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 1000"
"[INST] Here is a database schema: table schema: table_26165:  ""Represented"" [ text]  ""Contestant"" [ text]  ""Age"" [ real]  ""Hometown"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: If the height in inches is 5'7', what is the represented?It is not neccessary to use all the tables.[/INST] SELECT ""Represented"" FROM table_26165 WHERE ""Height (in.)"" = '5''7'"
"[INST] Here is a database schema: table schema: table_name_18:  place [ VARCHAR]  money___$__ [ INTEGER] 
  Please write me a syntactically correct SQL statement that answers the following question: What placement gets more than $400?It is not neccessary to use all the tables.[/INST] SELECT place FROM table_name_18 WHERE money___$__ > 400"
"[INST] Here is a database schema: table schema: table_74984:  ""Year"" [ real]  ""Class"" [ text]  ""Team"" [ text]  ""Points"" [ real]  ""Wins"" [ real] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the mean year number where there are more than 0 wins, the class is 250cc, and the points are 95?It is not neccessary to use all the tables.[/INST] SELECT AVG(""Year"") FROM table_74984 WHERE ""Wins"" > '0' AND ""Class"" = '250cc' AND ""Points"" = '95'"
"[INST] Here is a database schema: table schema: table_18653:  ""District"" [ text]  ""Incumbent"" [ text]  ""Party"" [ text]  ""Result"" [ text]  ""Candidates"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: How many first elections have Claude Fuller as incumbent?It is not neccessary to use all the tables.[/INST] SELECT COUNT(""First elected"") FROM table_18653 WHERE ""Incumbent"" = 'Claude Fuller'"
"[INST] Here is a database schema: table schema: table_37812:  ""Player"" [ text]  ""Touchdowns"" [ real]  ""Points"" [ real] 
  Please write me a syntactically correct SQL statement that answers the following question: How many Touchdowns have Extra points larger than 0, and Points of 48?It is not neccessary to use all the tables.[/INST] SELECT COUNT(""Touchdowns"") FROM table_37812 WHERE ""Extra points"" > '0' AND ""Points"" = '48'"
"[INST] Here is a database schema: table schema: table_name_19:  Id [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is 2004, when 2008 is 'WTA Premier 5 Tournaments'?It is not neccessary to use all the tables.[/INST] SELECT 2004 FROM table_name_19 WHERE 2008 = ""wta premier 5 tournaments"""
"[INST] Here is a database schema: table schema: table_203_812:  id [ number]  ""rank"" [ number]  ""nation"" [ text]  ""gold"" [ number]  ""silver"" [ number]  ""bronze"" [ number]  ""total"" [ number] 
  Please write me a syntactically correct SQL statement that answers the following question: how many silver medals did turkey win ?It is not neccessary to use all the tables.[/INST] SELECT ""silver"" FROM table_203_812 WHERE ""nation"" = 'turkey'"
"[INST] Here is a database schema: table schema: PostHistoryTypes:  Id [ number]  Name [ text] 
table schema: Votes:  Id [ number]  PostId [ number]  VoteTypeId [ number]  UserId [ number]  CreationDate [ time]  BountyAmount [ number] 
table schema: PostNoticeTypes:  Id [ number]  ClassId [ number]  Name [ text]  Body [ text]  IsHidden [ boolean]  Predefined [ boolean]  PostNoticeDurationId [ number] 
table schema: SuggestedEdits:  Id [ number]  PostId [ number]  CreationDate [ time]  ApprovalDate [ time]  RejectionDate [ time]  OwnerUserId [ number]  Comment [ text]  Text [ text]  Title [ text]  Tags [ text]  RevisionGUID [ other] 
table schema: PostNotices:  Id [ number]  PostId [ number]  PostNoticeTypeId [ number]  CreationDate [ time]  DeletionDate [ time]  ExpiryDate [ time]  Body [ text]  OwnerUserId [ number]  DeletionUserId [ number] 
table schema: ReviewTasks:  Id [ number]  ReviewTaskTypeId [ number]  CreationDate [ time]  DeletionDate [ time]  ReviewTaskStateId [ number]  PostId [ number]  SuggestedEditId [ number]  CompletedByReviewTaskId [ number] 
table schema: CloseReasonTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: ReviewRejectionReasons:  Id [ number]  Name [ text]  Description [ text]  PostTypeId [ number] 
table schema: Users:  Id [ number]  Reputation [ number]  CreationDate [ time]  DisplayName [ text]  LastAccessDate [ time]  WebsiteUrl [ text]  Location [ text]  AboutMe [ text]  Views [ number]  UpVotes [ number]  DownVotes [ number]  ProfileImageUrl [ text]  EmailHash [ text]  AccountId [ number] 
table schema: ReviewTaskResults:  Id [ number]  ReviewTaskId [ number]  ReviewTaskResultTypeId [ number]  CreationDate [ time]  RejectionReasonId [ number]  Comment [ text] 
table schema: Comments:  Id [ number]  PostId [ number]  Score [ number]  Text [ text]  CreationDate [ time]  UserDisplayName [ text]  UserId [ number]  ContentLicense [ text] 
table schema: FlagTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: ReviewTaskTypes:  Id [ number]  Name [ text]  Description [ text] 
table schema: Tags:  Id [ number]  TagName [ text]  Count [ number]  ExcerptPostId [ number]  WikiPostId [ number] 
table schema: PostLinks:  Id [ number]  CreationDate [ time]  PostId [ number]  RelatedPostId [ number]  LinkTypeId [ number] 
table schema: VoteTypes:  Id [ number]  Name [ text] 
table schema: TagSynonyms:  Id [ number]  SourceTagName [ text]  TargetTagName [ text]  CreationDate [ time]  OwnerUserId [ number]  AutoRenameCount [ number]  LastAutoRename [ time]  Score [ number]  ApprovedByUserId [ number]  ApprovalDate [ time] 
table schema: PostsWithDeleted:  Id [ number]  PostTypeId [ number]  AcceptedAnswerId [ number]  ParentId [ number]  CreationDate [ time]  DeletionDate [ time]  Score [ number]  ViewCount [ number]  Body [ text]  OwnerUserId [ number]  OwnerDisplayName [ text]  LastEditorUserId [ number]  LastEditorDisplayName [ text]  LastEditDate [ time]  LastActivityDate [ time]  Title [ text]  Tags [ text]  AnswerCount [ number]  CommentCount [ number]  FavoriteCount [ number]  ClosedDate [ time]  CommunityOwnedDate [ time]  ContentLicense [ text] 
table schema: PostTags:  PostId [ number]  TagId [ number] 
table schema: PostHistory:  Id [ number]  PostHistoryTypeId [ number]  PostId [ number]  RevisionGUID [ other]  CreationDate [ time]  UserId [ number]  UserDisplayName [ text]  Comment [ text]  Text [ text]  ContentLicense [ text] 
table schema: Badges:  Id [ number]  UserId [ number]  Name [ text]  Date [ time]  Class [ number]  TagBased [ boolean] 
table schema: Posts:  Id [ number]  PostTypeId [ number]  AcceptedAnswerId [ number]  ParentId [ number]  CreationDate [ time]  DeletionDate [ time]  Score [ number]  ViewCount [ number]  Body [ text]  OwnerUserId [ number]  OwnerDisplayName [ text]  LastEditorUserId [ number]  LastEditorDisplayName [ text]  LastEditDate [ time]  LastActivityDate [ time]  Title [ text]  Tags [ text]  AnswerCount [ number]  CommentCount [ number]  FavoriteCount [ number]  ClosedDate [ time]  CommunityOwnedDate [ time]  ContentLicense [ text] 
table schema: SuggestedEditVotes:  Id [ number]  SuggestedEditId [ number]  UserId [ number]  VoteTypeId [ number]  CreationDate [ time]  TargetUserId [ number]  TargetRepChange [ number] 
table schema: PostTypes:  Id [ number]  Name [ text] 
table schema: PendingFlags:  Id [ number]  FlagTypeId [ number]  PostId [ number]  CreationDate [ time]  CloseReasonTypeId [ number]  CloseAsOffTopicReasonTypeId [ number]  DuplicateOfQuestionId [ number]  BelongsOnBaseHostAddress [ text] 
table schema: CloseAsOffTopicReasonTypes:  Id [ number]  IsUniversal [ boolean]  InputTitle [ text]  MarkdownInputGuidance [ text]  MarkdownPostOwnerGuidance [ text]  MarkdownPrivilegedUserGuidance [ text]  MarkdownConcensusDescription [ text]  CreationDate [ time]  CreationModeratorId [ number]  ApprovalDate [ time]  ApprovalModeratorId [ number]  DeactivationDate [ time]  DeactivationModeratorId [ number] 
table schema: ReviewTaskStates:  Id [ number]  Name [ text]  Description [ text] 
table schema: PostFeedback:  Id [ number]  PostId [ number]  IsAnonymous [ boolean]  VoteTypeId [ number]  CreationDate [ time] 
table schema: ReviewTaskResultTypes:  Id [ number]  Name [ text]  Description [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: Number of answers for questions with an accepted answer.It is not neccessary to use all the tables.[/INST] SELECT Posts.Id AS ""post_link"", Posts.ViewCount AS ""views"", Posts.AnswerCount AS ""#_answers"" FROM Posts WHERE PostTypeId = 1 AND NOT Posts.AcceptedAnswerId IS NULL ORDER BY Posts.AnswerCount DESC"
"[INST] Here is a database schema: table schema: table_2904:  ""Episode"" [ text]  ""Scores"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: Name the scores for michael buerk and russell howardIt is not neccessary to use all the tables.[/INST] SELECT ""Scores"" FROM table_2904 WHERE ""Lees team"" = 'Michael Buerk and Russell Howard'"
"[INST] Here is a database schema: table schema: table_76884:  ""Game"" [ real]  ""Date"" [ text]  ""Opponent"" [ text]  ""Score"" [ text]  ""Location"" [ text]  ""Record"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the earliest game with a score of 99-89?It is not neccessary to use all the tables.[/INST] SELECT MIN(""Game"") FROM table_76884 WHERE ""Score"" = '99-89'"
"[INST] Here is a database schema: table schema: table_31967:  ""Calls"" [ text]  ""Frequency"" [ text]  ""Branding"" [ text]  ""Format"" [ text]  ""Timeslot"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: Tell me the timeslot for calls of whynIt is not neccessary to use all the tables.[/INST] SELECT ""Timeslot"" FROM table_31967 WHERE ""Calls"" = 'whyn'"
"[INST] Here is a database schema: table schema: lab:  subject_id [ text]  hadm_id [ text]  itemid [ text]  charttime [ text]  flag [ text]  value_unit [ text]  label [ text]  fluid [ text] 
table schema: diagnoses:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: procedures:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: prescriptions:  subject_id [ text]  hadm_id [ text]  icustay_id [ text]  drug_type [ text]  drug [ text]  formulary_drug_cd [ text]  route [ text]  drug_dose [ text] 
table schema: demographic:  subject_id [ text]  hadm_id [ text]  name [ text]  marital_status [ text]  age [ text]  dob [ text]  gender [ text]  language [ text]  religion [ text]  admission_type [ text]  days_stay [ text]  insurance [ text]  ethnicity [ text]  expire_flag [ text]  admission_location [ text]  discharge_location [ text]  diagnosis [ text]  dod [ text]  dob_year [ text]  dod_year [ text]  admittime [ text]  dischtime [ text]  admityear [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: give the maximum days of hospital stay for patients who are born after 2053.It is not neccessary to use all the tables.[/INST] SELECT MAX(demographic.days_stay) FROM demographic WHERE demographic.dob_year > ""2053"""
"[INST] Here is a database schema: table schema: table_20683381_2:  date_of_opinion_poll [ VARCHAR]  conductor [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: When was Quantum Research's poll conducted?It is not neccessary to use all the tables.[/INST] SELECT date_of_opinion_poll FROM table_20683381_2 WHERE conductor = ""Quantum Research"""
"[INST] Here is a database schema: table schema: producer:  pid [ int]  gender [ text]  name [ text]  nationality [ text]  birth_city [ text]  birth_year [ int] 
table schema: director:  did [ int]  gender [ text]  name [ text]  nationality [ text]  birth_city [ text]  birth_year [ int] 
table schema: tv_series:  sid [ int]  title [ text]  release_year [ int]  num_of_seasons [ int]  num_of_episodes [ int]  title_aka [ text]  budget [ text] 
table schema: classification:  id [ int]  msid [ int]  gid [ int] 
table schema: actor:  aid [ int]  gender [ text]  name [ text]  nationality [ text]  birth_city [ text]  birth_year [ int] 
table schema: tags:  id [ int]  msid [ int]  kid [ int] 
table schema: made_by:  id [ int]  msid [ int]  pid [ int] 
table schema: copyright:  id [ int]  msid [ int]  cid [ int] 
table schema: genre:  gid [ int]  genre [ text] 
table schema: directed_by:  id [ int]  msid [ int]  did [ int] 
table schema: keyword:  id [ int]  keyword [ text] 
table schema: written_by:  id [ int]  msid [ int]  wid [ int] 
table schema: movie:  mid [ int]  title [ text]  release_year [ int]  title_aka [ text]  budget [ text] 
table schema: writer:  wid [ int]  gender [ text]  name [ text]  nationality [ text]  birth_city [ text]  birth_year [ int] 
table schema: cast:  id [ int]  msid [ int]  aid [ int]  role [ text] 
table schema: company:  id [ int]  name [ text]  country_code [ varchar] 
  Please write me a syntactically correct SQL statement that answers the following question: In what year was ' Kevin Spacey ' born ?It is not neccessary to use all the tables.[/INST] SELECT birth_year FROM writer WHERE name = 'Kevin Spacey'"
"[INST] Here is a database schema: table schema: table_21149:  ""Religion"" [ text]  ""Suriname"" [ text]  ""Paramaribo"" [ text]  ""Wanica"" [ text]  ""Nickerie"" [ text]  ""Coronie"" [ text]  ""Saramacca"" [ text]  ""Commewijne"" [ text]  ""Marowijne"" [ text]  ""Para"" [ text]  ""Brokopondo"" [ text]  ""Sipaliwini"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: Name the coronie for marowijne being 6.8%It is not neccessary to use all the tables.[/INST] SELECT ""Coronie"" FROM table_21149 WHERE ""Marowijne"" = '6.8%'"
"[INST] Here is a database schema: table schema: subjects:  subject_id [ number]  subject_name [ text] 
table schema: course_authors_and_tutors:  author_id [ number]  author_tutor_atb [ text]  login_name [ text]  password [ text]  personal_name [ text]  middle_name [ text]  family_name [ text]  gender_mf [ text]  address_line_1 [ text] 
table schema: student_course_enrolment:  registration_id [ number]  student_id [ number]  course_id [ number]  date_of_enrolment [ time]  date_of_completion [ time] 
table schema: courses:  course_id [ number]  author_id [ number]  subject_id [ number]  course_name [ text]  course_description [ text] 
table schema: students:  student_id [ number]  date_of_registration [ time]  date_of_latest_logon [ time]  login_name [ text]  password [ text]  personal_name [ text]  middle_name [ text]  family_name [ text] 
table schema: student_tests_taken:  registration_id [ number]  date_test_taken [ time]  test_result [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What are the personal names and family names of the students? Sort the result in alphabetical order of the family name.It is not neccessary to use all the tables.[/INST] SELECT personal_name, family_name FROM students ORDER BY family_name"
"[INST] Here is a database schema: table schema: table_1266602_1:  crew_chief [ VARCHAR]  team [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What's the total number of crew chiefs of the Fas Lane Racing team?It is not neccessary to use all the tables.[/INST] SELECT COUNT(crew_chief) FROM table_1266602_1 WHERE team = ""FAS Lane Racing"""
"[INST] Here is a database schema: table schema: table_16010376_1:  bullet_weight [ VARCHAR]  source [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the weight of the bullet used in a Weatherby?It is not neccessary to use all the tables.[/INST] SELECT bullet_weight FROM table_16010376_1 WHERE source = ""Weatherby"""
"[INST] Here is a database schema: table schema: table_835:  ""District"" [ text]  ""Incumbent"" [ text]  ""Party"" [ text]  ""Elected"" [ real]  ""Status"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: In which district was the incumbent Dick Saslaw?It is not neccessary to use all the tables.[/INST] SELECT ""District"" FROM table_835 WHERE ""Incumbent"" = 'Dick Saslaw'"
"[INST] Here is a database schema: table schema: procedures:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
table schema: prescriptions:  subject_id [ text]  hadm_id [ text]  icustay_id [ text]  drug_type [ text]  drug [ text]  formulary_drug_cd [ text]  route [ text]  drug_dose [ text] 
table schema: demographic:  subject_id [ text]  hadm_id [ text]  name [ text]  marital_status [ text]  age [ text]  dob [ text]  gender [ text]  language [ text]  religion [ text]  admission_type [ text]  days_stay [ text]  insurance [ text]  ethnicity [ text]  expire_flag [ text]  admission_location [ text]  discharge_location [ text]  diagnosis [ text]  dod [ text]  dob_year [ text]  dod_year [ text]  admittime [ text]  dischtime [ text]  admityear [ text] 
table schema: lab:  subject_id [ text]  hadm_id [ text]  itemid [ text]  charttime [ text]  flag [ text]  value_unit [ text]  label [ text]  fluid [ text] 
table schema: diagnoses:  subject_id [ text]  hadm_id [ text]  icd9_code [ text]  short_title [ text]  long_title [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: provide the number of patients whose drug code is mago140 and lab test category is hematology.It is not neccessary to use all the tables.[/INST] SELECT COUNT(DISTINCT demographic.subject_id) FROM demographic INNER JOIN prescriptions ON demographic.hadm_id = prescriptions.hadm_id INNER JOIN lab ON demographic.hadm_id = lab.hadm_id WHERE prescriptions.formulary_drug_cd = ""MAGO140"" AND lab.""CATEGORY"" = ""Hematology"""
"[INST] Here is a database schema: table schema: departments:  DEPARTMENT_ID [ decimal(40)]  DEPARTMENT_NAME [ varchar(30)]  MANAGER_ID [ decimal(60)]  LOCATION_ID [ decimal(40)] 
table schema: regions:  REGION_ID [ decimal(50)]  REGION_NAME [ varchar(25)] 
table schema: employees:  EMPLOYEE_ID [ decimal(60)]  FIRST_NAME [ varchar(20)]  LAST_NAME [ varchar(25)]  EMAIL [ varchar(25)]  PHONE_NUMBER [ varchar(20)]  HIRE_DATE [ date]  JOB_ID [ varchar(10)]  SALARY [ decimal(82)]  COMMISSION_PCT [ decimal(22)]  MANAGER_ID [ decimal(60)]  DEPARTMENT_ID [ decimal(40)] 
table schema: jobs:  JOB_ID [ varchar(10)]  JOB_TITLE [ varchar(35)]  MIN_SALARY [ decimal(60)]  MAX_SALARY [ decimal(60)] 
table schema: job_history:  EMPLOYEE_ID [ decimal(60)]  START_DATE [ date]  END_DATE [ date]  JOB_ID [ varchar(10)]  DEPARTMENT_ID [ decimal(40)] 
table schema: countries:  COUNTRY_ID [ varchar(2)]  COUNTRY_NAME [ varchar(40)]  REGION_ID [ decimal(100)] 
table schema: locations:  LOCATION_ID [ decimal(40)]  STREET_ADDRESS [ varchar(40)]  POSTAL_CODE [ varchar(12)]  CITY [ varchar(30)]  STATE_PROVINCE [ varchar(25)]  COUNTRY_ID [ varchar(2)] 
  Please write me a syntactically correct SQL statement that answers the following question: For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and show Y-axis in desc order.It is not neccessary to use all the tables.[/INST] SELECT HIRE_DATE, SUM(DEPARTMENT_ID) FROM employees WHERE HIRE_DATE < '2002-06-21' ORDER BY SUM(DEPARTMENT_ID) DESC"
"[INST] Here is a database schema: table schema: table_1341884_19:  district [ VARCHAR]  incumbent [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What district is incumbent frank chelf from?It is not neccessary to use all the tables.[/INST] SELECT district FROM table_1341884_19 WHERE incumbent = ""Frank Chelf"""
"[INST] Here is a database schema: table schema: vitalperiodic:  vitalperiodicid [ number]  patientunitstayid [ number]  temperature [ number]  sao2 [ number]  heartrate [ number]  respiration [ number]  systemicsystolic [ number]  systemicdiastolic [ number]  systemicmean [ number]  observationtime [ time] 
table schema: patient:  uniquepid [ text]  patienthealthsystemstayid [ number]  patientunitstayid [ number]  gender [ text]  age [ text]  ethnicity [ text]  hospitalid [ number]  wardid [ number]  admissionheight [ number]  admissionweight [ number]  dischargeweight [ number]  hospitaladmittime [ time]  hospitaladmitsource [ text]  unitadmittime [ time]  unitdischargetime [ time]  hospitaldischargetime [ time]  hospitaldischargestatus [ text] 
table schema: intakeoutput:  intakeoutputid [ number]  patientunitstayid [ number]  cellpath [ text]  celllabel [ text]  cellvaluenumeric [ number]  intakeoutputtime [ time] 
table schema: lab:  labid [ number]  patientunitstayid [ number]  labname [ text]  labresult [ number]  labresulttime [ time] 
table schema: diagnosis:  diagnosisid [ number]  patientunitstayid [ number]  diagnosisname [ text]  diagnosistime [ time]  icd9code [ text] 
table schema: microlab:  microlabid [ number]  patientunitstayid [ number]  culturesite [ text]  organism [ text]  culturetakentime [ time] 
table schema: treatment:  treatmentid [ number]  patientunitstayid [ number]  treatmentname [ text]  treatmenttime [ time] 
table schema: allergy:  allergyid [ number]  patientunitstayid [ number]  drugname [ text]  allergyname [ text]  allergytime [ time] 
table schema: cost:  costid [ number]  uniquepid [ text]  patienthealthsystemstayid [ number]  eventtype [ text]  eventid [ number]  chargetime [ time]  cost [ number] 
table schema: medication:  medicationid [ number]  patientunitstayid [ number]  drugname [ text]  dosage [ text]  routeadmin [ text]  drugstarttime [ time]  drugstoptime [ time] 
  Please write me a syntactically correct SQL statement that answers the following question: how many days have elapsed since patient 004-13127 last received a -monos lab test on their current hospital visit?It is not neccessary to use all the tables.[/INST] SELECT 1 * (STRFTIME('%j', CURRENT_TIME()) - STRFTIME('%j', lab.labresulttime)) FROM lab WHERE lab.patientunitstayid IN (SELECT patient.patientunitstayid FROM patient WHERE patient.patienthealthsystemstayid IN (SELECT patient.patienthealthsystemstayid FROM patient WHERE patient.uniquepid = '004-13127' AND patient.hospitaldischargetime IS NULL)) AND lab.labname = '-monos' ORDER BY lab.labresulttime DESC LIMIT 1"
"[INST] Here is a database schema: table schema: table_name_34:  attendance [ VARCHAR]  date [ VARCHAR]  week [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What was the attendance of the game on December 13, 1970?It is not neccessary to use all the tables.[/INST] SELECT COUNT(attendance) FROM table_name_34 WHERE date = ""december 13, 1970"" AND week > 13"
"[INST] Here is a database schema: table schema: course_tags_count:  course_id [ int]  clear_grading [ int]  pop_quiz [ int]  group_projects [ int]  inspirational [ int]  long_lectures [ int]  extra_credit [ int]  few_tests [ int]  good_feedback [ int]  tough_tests [ int]  heavy_papers [ int]  cares_for_students [ int]  heavy_assignments [ int]  respected [ int]  participation [ int]  heavy_reading [ int]  tough_grader [ int]  hilarious [ int]  would_take_again [ int]  good_lecture [ int]  no_skip [ int] 
table schema: student_record:  student_id [ int]  course_id [ int]  semester [ int]  grade [ varchar]  how [ varchar]  transfer_source [ varchar]  earn_credit [ varchar]  repeat_term [ varchar]  test_id [ varchar] 
table schema: offering_instructor:  offering_instructor_id [ int]  offering_id [ int]  instructor_id [ int] 
table schema: student:  student_id [ int]  lastname [ varchar]  firstname [ varchar]  program_id [ int]  declare_major [ varchar]  total_credit [ int]  total_gpa [ float]  entered_as [ varchar]  admit_term [ int]  predicted_graduation_semester [ int]  degree [ varchar]  minor [ varchar]  internship [ varchar] 
table schema: ta:  campus_job_id [ int]  student_id [ int]  location [ varchar] 
table schema: program_course:  program_id [ int]  course_id [ int]  workload [ int]  category [ varchar] 
table schema: gsi:  course_offering_id [ int]  student_id [ int] 
table schema: course:  course_id [ int]  name [ varchar]  department [ varchar]  number [ varchar]  credits [ varchar]  advisory_requirement [ varchar]  enforced_requirement [ varchar]  description [ varchar]  num_semesters [ int]  num_enrolled [ int]  has_discussion [ varchar]  has_lab [ varchar]  has_projects [ varchar]  has_exams [ varchar]  num_reviews [ int]  clarity_score [ int]  easiness_score [ int]  helpfulness_score [ int] 
table schema: jobs:  job_id [ int]  job_title [ varchar]  description [ varchar]  requirement [ varchar]  city [ varchar]  state [ varchar]  country [ varchar]  zip [ int] 
table schema: course_prerequisite:  pre_course_id [ int]  course_id [ int] 
table schema: requirement:  requirement_id [ int]  requirement [ varchar]  college [ varchar] 
table schema: semester:  semester_id [ int]  semester [ varchar]  year [ int] 
table schema: program_requirement:  program_id [ int]  category [ varchar]  min_credit [ int]  additional_req [ varchar] 
table schema: course_offering:  offering_id [ int]  course_id [ int]  semester [ int]  section_number [ int]  start_time [ time]  end_time [ time]  monday [ varchar]  tuesday [ varchar]  wednesday [ varchar]  thursday [ varchar]  friday [ varchar]  saturday [ varchar]  sunday [ varchar]  has_final_project [ varchar]  has_final_exam [ varchar]  textbook [ varchar]  class_address [ varchar]  allow_audit [ varchar] 
table schema: program:  program_id [ int]  name [ varchar]  college [ varchar]  introduction [ varchar] 
table schema: comment_instructor:  instructor_id [ int]  student_id [ int]  score [ int]  comment_text [ varchar] 
table schema: instructor:  instructor_id [ int]  name [ varchar]  uniqname [ varchar] 
table schema: area:  course_id [ int]  area [ varchar] 
  Please write me a syntactically correct SQL statement that answers the following question: Have I completed any hardware courses yet ?It is not neccessary to use all the tables.[/INST] SELECT DISTINCT course.department, course.name, course.number FROM course INNER JOIN student_record ON student_record.course_id = course.course_id INNER JOIN area ON student_record.course_id = area.course_id WHERE area.area LIKE '%hardware%' AND student_record.student_id = 1"
"[INST] Here is a database schema: table schema: table_name_10:  team [ VARCHAR]  rank [ VARCHAR]  time [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the name of the team with a rank smaller than 5 and a time of 1:37.58.38?It is not neccessary to use all the tables.[/INST] SELECT team FROM table_name_10 WHERE rank < 5 AND time = ""1:37.58.38"""
"[INST] Here is a database schema: table schema: table_203_354:  id [ number]  ""party"" [ text]  ""candidate(s)"" [ text]  ""votes"" [ number]  ""percentage"" [ number] 
  Please write me a syntactically correct SQL statement that answers the following question: how many people voted for the top 4 parties ?It is not neccessary to use all the tables.[/INST] SELECT SUM(""votes"") FROM table_203_354 WHERE id <= 4"
"[INST] Here is a database schema: table schema: jobs:  JOB_ID [ varchar(10)]  JOB_TITLE [ varchar(35)]  MIN_SALARY [ decimal(60)]  MAX_SALARY [ decimal(60)] 
table schema: countries:  COUNTRY_ID [ varchar(2)]  COUNTRY_NAME [ varchar(40)]  REGION_ID [ decimal(100)] 
table schema: locations:  LOCATION_ID [ decimal(40)]  STREET_ADDRESS [ varchar(40)]  POSTAL_CODE [ varchar(12)]  CITY [ varchar(30)]  STATE_PROVINCE [ varchar(25)]  COUNTRY_ID [ varchar(2)] 
table schema: departments:  DEPARTMENT_ID [ decimal(40)]  DEPARTMENT_NAME [ varchar(30)]  MANAGER_ID [ decimal(60)]  LOCATION_ID [ decimal(40)] 
table schema: regions:  REGION_ID [ decimal(50)]  REGION_NAME [ varchar(25)] 
table schema: job_history:  EMPLOYEE_ID [ decimal(60)]  START_DATE [ date]  END_DATE [ date]  JOB_ID [ varchar(10)]  DEPARTMENT_ID [ decimal(40)] 
table schema: employees:  EMPLOYEE_ID [ decimal(60)]  FIRST_NAME [ varchar(20)]  LAST_NAME [ varchar(25)]  EMAIL [ varchar(25)]  PHONE_NUMBER [ varchar(20)]  HIRE_DATE [ date]  JOB_ID [ varchar(10)]  SALARY [ decimal(82)]  COMMISSION_PCT [ decimal(22)]  MANAGER_ID [ decimal(60)]  DEPARTMENT_ID [ decimal(40)] 
  Please write me a syntactically correct SQL statement that answers the following question: For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, list in asc by the y axis.It is not neccessary to use all the tables.[/INST] SELECT HIRE_DATE, AVG(DEPARTMENT_ID) FROM employees WHERE NOT DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM departments WHERE MANAGER_ID BETWEEN 100 AND 200) ORDER BY AVG(DEPARTMENT_ID)"
"[INST] Here is a database schema: table schema: table_name_58:  aggregate [ VARCHAR]  club [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: The Crvena Zvezda club has what aggregate?It is not neccessary to use all the tables.[/INST] SELECT aggregate FROM table_name_58 WHERE club = ""crvena zvezda"""
"[INST] Here is a database schema: table schema: table_name_79:  season [ VARCHAR]  losses [ VARCHAR]  team [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: Which season had 16 losses for the Hampshire team?It is not neccessary to use all the tables.[/INST] SELECT season FROM table_name_79 WHERE losses = ""16"" AND team = ""hampshire"""
"[INST] Here is a database schema: table schema: table_261951_1:  population__2010_ [ INTEGER] 
  Please write me a syntactically correct SQL statement that answers the following question: What was the smallist population in 2010?It is not neccessary to use all the tables.[/INST] SELECT MIN(population__2010_) FROM table_261951_1"
"[INST] Here is a database schema: table schema: table_12796:  ""Track"" [ real]  ""Title"" [ text]  ""Songwriter(s)"" [ text]  ""Time"" [ text] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the first track where the production credit is margret arranged by e. mergency?It is not neccessary to use all the tables.[/INST] SELECT MIN(""Track"") FROM table_12796 WHERE ""Production credits"" = 'margret arranged by e. mergency'"
"[INST] Here is a database schema: table schema: employees:  EMPLOYEE_ID [ decimal(60)]  FIRST_NAME [ varchar(20)]  LAST_NAME [ varchar(25)]  EMAIL [ varchar(25)]  PHONE_NUMBER [ varchar(20)]  HIRE_DATE [ date]  JOB_ID [ varchar(10)]  SALARY [ decimal(82)]  COMMISSION_PCT [ decimal(22)]  MANAGER_ID [ decimal(60)]  DEPARTMENT_ID [ decimal(40)] 
table schema: job_history:  EMPLOYEE_ID [ decimal(60)]  START_DATE [ date]  END_DATE [ date]  JOB_ID [ varchar(10)]  DEPARTMENT_ID [ decimal(40)] 
table schema: countries:  COUNTRY_ID [ varchar(2)]  COUNTRY_NAME [ varchar(40)]  REGION_ID [ decimal(100)] 
table schema: departments:  DEPARTMENT_ID [ decimal(40)]  DEPARTMENT_NAME [ varchar(30)]  MANAGER_ID [ decimal(60)]  LOCATION_ID [ decimal(40)] 
table schema: regions:  REGION_ID [ decimal(50)]  REGION_NAME [ varchar(25)] 
table schema: jobs:  JOB_ID [ varchar(10)]  JOB_TITLE [ varchar(35)]  MIN_SALARY [ decimal(60)]  MAX_SALARY [ decimal(60)] 
table schema: locations:  LOCATION_ID [ decimal(40)]  STREET_ADDRESS [ varchar(40)]  POSTAL_CODE [ varchar(12)]  CITY [ varchar(30)]  STATE_PROVINCE [ varchar(25)]  COUNTRY_ID [ varchar(2)] 
  Please write me a syntactically correct SQL statement that answers the following question: For all employees who have the letters D or S in their first name, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart, order from low to high by the y-axis.It is not neccessary to use all the tables.[/INST] SELECT HIRE_DATE, SUM(MANAGER_ID) FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' ORDER BY SUM(MANAGER_ID)"
"[INST] Here is a database schema: table schema: table_name_97:  partnered_with [ VARCHAR]  score_in_final [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: Who was Alicja Rosolska Partnered with when the Score in Final was 4 6, 3 6?It is not neccessary to use all the tables.[/INST] SELECT partnered_with FROM table_name_97 WHERE score_in_final = ""4–6, 3–6"""
"[INST] Here is a database schema: table schema: table_262505_1:  founded [ VARCHAR]  current_conference [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: Name the founded for school closed in 2005It is not neccessary to use all the tables.[/INST] SELECT founded FROM table_262505_1 WHERE current_conference = ""school closed in 2005"""
"[INST] Here is a database schema: table schema: table_name_25:  conf [ VARCHAR]  original_nfl_team [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What conference did the player originally from the denver broncos play in?It is not neccessary to use all the tables.[/INST] SELECT conf FROM table_name_25 WHERE original_nfl_team = ""denver broncos"""
"[INST] Here is a database schema: table schema: table_name_54:  gold [ INTEGER]  nation [ VARCHAR]  bronze [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: Name the fewest gold for tanzania with bronze less than 0It is not neccessary to use all the tables.[/INST] SELECT MIN(gold) FROM table_name_54 WHERE nation = ""tanzania"" AND bronze < 0"
"[INST] Here is a database schema: table schema: table_name_46:  tie_no [ VARCHAR]  home_team [ VARCHAR] 
  Please write me a syntactically correct SQL statement that answers the following question: What is the tie number for Middlesbrough?It is not neccessary to use all the tables.[/INST] SELECT tie_no FROM table_name_46 WHERE home_team = ""middlesbrough"""
